{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/OpenAPI.Commands.CommandData.html": {
    "href": "api/OpenAPI.Commands.CommandData.html",
    "title": "Class CommandData",
    "keywords": "Class CommandData Inheritance System.Object CommandData Namespace : OpenAPI.Commands Assembly : OpenAPI.dll Syntax public class CommandData : object Constructors | Improve this Doc View Source CommandData(CommandAttribute, Object) Declaration public CommandData(CommandAttribute attribute, object instance) Parameters Type Name Description CommandAttribute attribute System.Object instance | Improve this Doc View Source CommandData(CommandAttribute, Object, CommandPermissionAttribute) Declaration public CommandData(CommandAttribute attribute, object instance, CommandPermissionAttribute permissionAttribute) Parameters Type Name Description CommandAttribute attribute System.Object instance CommandPermissionAttribute permissionAttribute Properties | Improve this Doc View Source Attribute Declaration public CommandAttribute Attribute { get; set; } Property Value Type Description CommandAttribute | Improve this Doc View Source Instance Declaration public object Instance { get; set; } Property Value Type Description System.Object | Improve this Doc View Source PermissionAttribute Declaration public CommandPermissionAttribute PermissionAttribute { get; set; } Property Value Type Description CommandPermissionAttribute"
  },
  "api/OpenAPI.Commands.CommandManager.html": {
    "href": "api/OpenAPI.Commands.CommandManager.html",
    "title": "Class CommandManager",
    "keywords": "Class CommandManager Inheritance System.Object CommandManager Namespace : OpenAPI.Commands Assembly : OpenAPI.dll Syntax public class CommandManager : object Constructors | Improve this Doc View Source CommandManager(OpenPluginManager) Declaration public CommandManager(OpenPluginManager pluginManager) Parameters Type Name Description OpenPluginManager pluginManager Properties | Improve this Doc View Source HasExternalPermissionChecker Declaration public bool HasExternalPermissionChecker { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source FillTargets(OpenPlayer, OpenLevel, String) Declaration public MiNET.Plugins.Target FillTargets(OpenPlayer commander, OpenLevel level, string source) Parameters Type Name Description OpenPlayer commander OpenLevel level System.String source Returns Type Description MiNET.Plugins.Target | Improve this Doc View Source HasProperty(Object, String) Declaration public static bool HasProperty(dynamic obj, string name) Parameters Type Name Description System.Object obj System.String name Returns Type Description System.Boolean | Improve this Doc View Source LoadCommands(Object) Declaration public void LoadCommands(object instance) Parameters Type Name Description System.Object instance | Improve this Doc View Source ParseTarget(String) Declaration public static MiNET.Plugins.Target ParseTarget(string source) Parameters Type Name Description System.String source Returns Type Description MiNET.Plugins.Target | Improve this Doc View Source RegisterPermissionChecker(Type, CommandPermissionChecker) Declaration public void RegisterPermissionChecker(Type type, CommandPermissionChecker permissionChecker) Parameters Type Name Description Type type CommandPermissionChecker permissionChecker | Improve this Doc View Source RegisterPermissionChecker<TType>(CommandPermissionChecker<TType>) Declaration public void RegisterPermissionChecker<TType>(CommandPermissionChecker<TType> permissionChecker) where TType : CommandPermissionAttribute Parameters Type Name Description CommandPermissionChecker <TType> permissionChecker Type Parameters Name Description TType | Improve this Doc View Source ToCamelCase(String) Declaration public static string ToCamelCase(string s) Parameters Type Name Description System.String s Returns Type Description System.String | Improve this Doc View Source UnloadCommands(Object) Declaration public void UnloadCommands(object instance) Parameters Type Name Description System.Object instance"
  },
  "api/OpenAPI.Commands.CommandPermissionAttribute.html": {
    "href": "api/OpenAPI.Commands.CommandPermissionAttribute.html",
    "title": "Class CommandPermissionAttribute",
    "keywords": "Class CommandPermissionAttribute Inheritance System.Object CommandPermissionAttribute StringPermissionAttribute Namespace : OpenAPI.Commands Assembly : OpenAPI.dll Syntax public abstract class CommandPermissionAttribute : Attribute"
  },
  "api/OpenAPI.Commands.CommandPermissionChecker.html": {
    "href": "api/OpenAPI.Commands.CommandPermissionChecker.html",
    "title": "Class CommandPermissionChecker",
    "keywords": "Class CommandPermissionChecker Inheritance System.Object CommandPermissionChecker CommandPermissionChecker<TType> Namespace : OpenAPI.Commands Assembly : OpenAPI.dll Syntax public abstract class CommandPermissionChecker : object Methods | Improve this Doc View Source HasPermission(CommandPermissionAttribute, OpenPlayer) Declaration public abstract bool HasPermission(CommandPermissionAttribute attr, OpenPlayer player) Parameters Type Name Description CommandPermissionAttribute attr OpenPlayer player Returns Type Description System.Boolean"
  },
  "api/OpenAPI.Commands.CommandPermissionChecker-1.html": {
    "href": "api/OpenAPI.Commands.CommandPermissionChecker-1.html",
    "title": "Class CommandPermissionChecker<TType>",
    "keywords": "Class CommandPermissionChecker<TType> Inheritance System.Object CommandPermissionChecker CommandPermissionChecker<TType> DefaultPermissionChecker Namespace : OpenAPI.Commands Assembly : OpenAPI.dll Syntax public class CommandPermissionChecker<TType> : CommandPermissionChecker where TType : CommandPermissionAttribute Type Parameters Name Description TType Methods | Improve this Doc View Source HasPermission(TType, OpenPlayer) Declaration public virtual bool HasPermission(TType attr, OpenPlayer player) Parameters Type Name Description TType attr OpenPlayer player Returns Type Description System.Boolean | Improve this Doc View Source HasPermission(CommandPermissionAttribute, OpenPlayer) Declaration public override bool HasPermission(CommandPermissionAttribute attr, OpenPlayer player) Parameters Type Name Description CommandPermissionAttribute attr OpenPlayer player Returns Type Description System.Boolean Overrides CommandPermissionChecker.HasPermission(CommandPermissionAttribute, OpenPlayer)"
  },
  "api/OpenAPI.Commands.CustomEnum.html": {
    "href": "api/OpenAPI.Commands.CustomEnum.html",
    "title": "Class CustomEnum",
    "keywords": "Class CustomEnum Inheritance System.Object CustomEnum Namespace : OpenAPI.Commands Assembly : OpenAPI.dll Syntax public abstract class CustomEnum : object Properties | Improve this Doc View Source EnumType Declaration public string EnumType { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value Declaration public string Value { get; protected set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetValues() Declaration public abstract string[] GetValues() Returns Type Description System.String [] | Improve this Doc View Source SetValue(String) Set's the value of the parameter, should return false if not a valid option. Declaration public abstract bool SetValue(string value) Parameters Type Name Description System.String value Returns Type Description System.Boolean"
  },
  "api/OpenAPI.Commands.DefaultPermissionChecker.html": {
    "href": "api/OpenAPI.Commands.DefaultPermissionChecker.html",
    "title": "Class DefaultPermissionChecker",
    "keywords": "Class DefaultPermissionChecker Inheritance System.Object CommandPermissionChecker CommandPermissionChecker < StringPermissionAttribute > DefaultPermissionChecker Inherited Members CommandPermissionChecker<StringPermissionAttribute>.HasPermission(CommandPermissionAttribute, OpenPlayer) Namespace : OpenAPI.Commands Assembly : OpenAPI.dll Syntax public class DefaultPermissionChecker : CommandPermissionChecker<StringPermissionAttribute> Methods | Improve this Doc View Source HasPermission(StringPermissionAttribute, OpenPlayer) Declaration public override bool HasPermission(StringPermissionAttribute attr, OpenPlayer player) Parameters Type Name Description StringPermissionAttribute attr OpenPlayer player Returns Type Description System.Boolean Overrides OpenAPI.Commands.CommandPermissionChecker<OpenAPI.Commands.StringPermissionAttribute>.HasPermission(OpenAPI.Commands.StringPermissionAttribute, OpenAPI.Player.OpenPlayer)"
  },
  "api/OpenAPI.Commands.html": {
    "href": "api/OpenAPI.Commands.html",
    "title": "Namespace OpenAPI.Commands",
    "keywords": "Namespace OpenAPI.Commands Classes CommandData CommandManager CommandPermissionAttribute CommandPermissionChecker CommandPermissionChecker<TType> CustomEnum DefaultPermissionChecker StringPermissionAttribute"
  },
  "api/OpenAPI.Commands.StringPermissionAttribute.html": {
    "href": "api/OpenAPI.Commands.StringPermissionAttribute.html",
    "title": "Class StringPermissionAttribute",
    "keywords": "Class StringPermissionAttribute Inheritance System.Object CommandPermissionAttribute StringPermissionAttribute Namespace : OpenAPI.Commands Assembly : OpenAPI.dll Syntax public class StringPermissionAttribute : CommandPermissionAttribute Constructors | Improve this Doc View Source StringPermissionAttribute(String) Declaration public StringPermissionAttribute(string permission) Parameters Type Name Description System.String permission Properties | Improve this Doc View Source Permission Declaration public string Permission { get; set; } Property Value Type Description System.String"
  },
  "api/OpenAPI.Entities.DisguiseHealthManager.html": {
    "href": "api/OpenAPI.Entities.DisguiseHealthManager.html",
    "title": "Class DisguiseHealthManager",
    "keywords": "Class DisguiseHealthManager Inheritance System.Object OpenHealthManager DisguiseHealthManager Namespace : OpenAPI.Entities Assembly : OpenAPI.dll Syntax public class DisguiseHealthManager : OpenHealthManager Constructors | Improve this Doc View Source DisguiseHealthManager(Entity, Entity) Declaration public DisguiseHealthManager(Entity entity, Entity parent) Parameters Type Name Description Entity entity Entity parent Methods | Improve this Doc View Source DoKnockback(Entity, Item) Declaration protected override void DoKnockback(Entity source, Item tool) Parameters Type Name Description Entity source Item tool | Improve this Doc View Source Kill() Declaration public override void Kill() Overrides OpenHealthManager.Kill() | Improve this Doc View Source Regen(Int32) Declaration public override void Regen(int amount = 1) Parameters Type Name Description System.Int32 amount Overrides OpenHealthManager.Regen(Int32) | Improve this Doc View Source TakeHit(Entity, Item, Int32, DamageCause) Declaration public override void TakeHit(Entity source, Item tool, int damage = 1, DamageCause cause = null) Parameters Type Name Description Entity source Item tool System.Int32 damage DamageCause cause Overrides OpenHealthManager.TakeHit(Entity, Item, Int32, DamageCause) | Improve this Doc View Source TakeHit(Entity, Int32, DamageCause) Declaration public override void TakeHit(Entity source, int damage = 1, DamageCause cause = null) Parameters Type Name Description Entity source System.Int32 damage DamageCause cause Overrides OpenHealthManager.TakeHit(Entity, Int32, DamageCause)"
  },
  "api/OpenAPI.Entities.EntityDamageModifier.html": {
    "href": "api/OpenAPI.Entities.EntityDamageModifier.html",
    "title": "Enum EntityDamageModifier",
    "keywords": "Enum EntityDamageModifier Namespace : OpenAPI.Entities Assembly : OpenAPI.dll Syntax public enum EntityDamageModifier : int Fields Name Description Absorption Armor ArmorEnchantments Critical Resistance Strength Totem Weakness WeaponEnchantment"
  },
  "api/OpenAPI.Entities.EntityDisguise.html": {
    "href": "api/OpenAPI.Entities.EntityDisguise.html",
    "title": "Class EntityDisguise",
    "keywords": "Class EntityDisguise Inheritance System.Object EntityDisguise Namespace : OpenAPI.Entities Assembly : OpenAPI.dll Syntax public class EntityDisguise : object Constructors | Improve this Doc View Source EntityDisguise(Entity, Entity) Declaration public EntityDisguise(Entity parent, Entity disguise) Parameters Type Name Description Entity parent Entity disguise Properties | Improve this Doc View Source Disguise Declaration public Entity Disguise { get; } Property Value Type Description Entity | Improve this Doc View Source Parent Declaration public Entity Parent { get; } Property Value Type Description Entity | Improve this Doc View Source PositionOffset Declaration public Vector3 PositionOffset { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source SpawnToSelf Declaration public bool SpawnToSelf { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DespawnDisguise() Declaration public void DespawnDisguise() | Improve this Doc View Source DespawnFromPlayers(MiNET.Player[]) Declaration public void DespawnFromPlayers(MiNET.Player[] players) Parameters Type Name Description MiNET.Player [] players | Improve this Doc View Source SpawnDisguise() Declaration public void SpawnDisguise() | Improve this Doc View Source SpawnToPlayers(MiNET.Player[]) Declaration public void SpawnToPlayers(MiNET.Player[] players) Parameters Type Name Description MiNET.Player [] players | Improve this Doc View Source Tick() Declaration public void Tick()"
  },
  "api/OpenAPI.Entities.html": {
    "href": "api/OpenAPI.Entities.html",
    "title": "Namespace OpenAPI.Entities",
    "keywords": "Namespace OpenAPI.Entities Classes DisguiseHealthManager EntityDisguise OpenEntity OpenEntityManager OpenHealthManager OpenHungerManager Enums EntityDamageModifier"
  },
  "api/OpenAPI.Entities.OpenEntity.html": {
    "href": "api/OpenAPI.Entities.OpenEntity.html",
    "title": "Class OpenEntity",
    "keywords": "Class OpenEntity Inheritance System.Object OpenEntity Namespace : OpenAPI.Entities Assembly : OpenAPI.dll Syntax public class OpenEntity : Entity Constructors | Improve this Doc View Source OpenEntity(Int32, OpenLevel) Declaration public OpenEntity(int entityTypeId, OpenLevel level) Parameters Type Name Description System.Int32 entityTypeId OpenLevel level Properties | Improve this Doc View Source OpenLevel Declaration public OpenLevel OpenLevel { get; } Property Value Type Description OpenLevel Methods | Improve this Doc View Source SpawnEntity() Declaration public override void SpawnEntity()"
  },
  "api/OpenAPI.Entities.OpenEntityManager.html": {
    "href": "api/OpenAPI.Entities.OpenEntityManager.html",
    "title": "Class OpenEntityManager",
    "keywords": "Class OpenEntityManager Inheritance System.Object OpenEntityManager Namespace : OpenAPI.Entities Assembly : OpenAPI.dll Syntax public class OpenEntityManager : EntityManager"
  },
  "api/OpenAPI.Entities.OpenHealthManager.html": {
    "href": "api/OpenAPI.Entities.OpenHealthManager.html",
    "title": "Class OpenHealthManager",
    "keywords": "Class OpenHealthManager Inheritance System.Object OpenHealthManager DisguiseHealthManager Namespace : OpenAPI.Entities Assembly : OpenAPI.dll Syntax public class OpenHealthManager : HealthManager Constructors | Improve this Doc View Source OpenHealthManager(Entity) Declaration public OpenHealthManager(Entity entity) Parameters Type Name Description Entity entity Methods | Improve this Doc View Source Kill() Declaration public override void Kill() | Improve this Doc View Source Regen(Int32) Declaration public override void Regen(int amount = 1) Parameters Type Name Description System.Int32 amount | Improve this Doc View Source TakeHit(Entity, Item, Int32, DamageCause) Declaration public override void TakeHit(Entity source, Item tool, int damage = 1, DamageCause cause = null) Parameters Type Name Description Entity source Item tool System.Int32 damage DamageCause cause | Improve this Doc View Source TakeHit(Entity, Int32, DamageCause) Declaration public override void TakeHit(Entity source, int damage = 1, DamageCause cause = null) Parameters Type Name Description Entity source System.Int32 damage DamageCause cause"
  },
  "api/OpenAPI.Entities.OpenHungerManager.html": {
    "href": "api/OpenAPI.Entities.OpenHungerManager.html",
    "title": "Class OpenHungerManager",
    "keywords": "Class OpenHungerManager Inheritance System.Object OpenHungerManager Namespace : OpenAPI.Entities Assembly : OpenAPI.dll Syntax public class OpenHungerManager : HungerManager Constructors | Improve this Doc View Source OpenHungerManager(OpenPlayer) Declaration public OpenHungerManager(OpenPlayer player) Parameters Type Name Description OpenPlayer player Methods | Improve this Doc View Source IncreaseExhaustion(Single) Declaration public override void IncreaseExhaustion(float amount) Parameters Type Name Description System.Single amount | Improve this Doc View Source IncreaseFoodAndSaturation(Item, Int32, Double) Declaration public override void IncreaseFoodAndSaturation(Item item, int foodPoints, double saturationRestore) Parameters Type Name Description Item item System.Int32 foodPoints System.Double saturationRestore | Improve this Doc View Source OnTick() Declaration public override void OnTick() | Improve this Doc View Source ProcessHunger(Boolean) Declaration public override void ProcessHunger(bool forceSend = false) Parameters Type Name Description System.Boolean forceSend"
  },
  "api/OpenAPI.Events.Block.BlockAbortBreakEvent.html": {
    "href": "api/OpenAPI.Events.Block.BlockAbortBreakEvent.html",
    "title": "Class BlockAbortBreakEvent",
    "keywords": "Class BlockAbortBreakEvent Get's dispatched whenever a OpenPlayer stops breaking a block before the block could be destroyed. Inheritance System.Object Event BlockEvent BlockExpEvent BlockBreakEvent BlockStartBreakEvent BlockAbortBreakEvent Implements INotifyExecution Inherited Members BlockBreakEvent.Source BlockBreakEvent.Drops BlockBreakEvent.OnEventExecution BlockBreakEvent.OnComplete(Object) BlockExpEvent.Experience BlockEvent.Block Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Block Assembly : OpenAPI.dll Syntax public class BlockAbortBreakEvent : BlockStartBreakEvent, INotifyExecution Constructors | Improve this Doc View Source BlockAbortBreakEvent(OpenPlayer, MiNET.Blocks.Block) Declaration public BlockAbortBreakEvent(OpenPlayer player, MiNET.Blocks.Block block) Parameters Type Name Description OpenPlayer player The player that triggered the event MiNET.Blocks.Block block The block that the player was targetting Implements INotifyExecution"
  },
  "api/OpenAPI.Events.Block.BlockBreakEvent.html": {
    "href": "api/OpenAPI.Events.Block.BlockBreakEvent.html",
    "title": "Class BlockBreakEvent",
    "keywords": "Class BlockBreakEvent Gets dispatched when a breaks a block. Inheritance System.Object Event BlockEvent BlockExpEvent BlockBreakEvent BlockStartBreakEvent Implements INotifyExecution Inherited Members BlockExpEvent.Experience BlockEvent.Block Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Block Assembly : OpenAPI.dll Syntax public class BlockBreakEvent : BlockExpEvent, INotifyExecution Constructors | Improve this Doc View Source BlockBreakEvent(MiNET.Entities.Entity, MiNET.Blocks.Block, List<Item>) Declaration public BlockBreakEvent(MiNET.Entities.Entity player, MiNET.Blocks.Block block, List<Item> drops) Parameters Type Name Description MiNET.Entities.Entity player The entity that triggered the event MiNET.Blocks.Block block The block that was broken List < Item > drops The items that were gonna be dropped if the block broke Properties | Improve this Doc View Source Drops The items that were to be dropped if the block gets broken. Declaration public List<Item> Drops { get; } Property Value Type Description List < Item > | Improve this Doc View Source OnEventExecution Declaration public EventHandler<Event.EventTaskCompleted> OnEventExecution { get; set; } Property Value Type Description EventHandler < Event.EventTaskCompleted > | Improve this Doc View Source Source The that broke the block. This can be a player, a mob or null. Declaration public MiNET.Entities.Entity Source { get; } Property Value Type Description MiNET.Entities.Entity Methods | Improve this Doc View Source OnComplete(Object) Declaration public void OnComplete(object source) Parameters Type Name Description System.Object source Implements INotifyExecution"
  },
  "api/OpenAPI.Events.Block.BlockEvent.html": {
    "href": "api/OpenAPI.Events.Block.BlockEvent.html",
    "title": "Class BlockEvent",
    "keywords": "Class BlockEvent The base class for any events related to blocks Inheritance System.Object Event BlockEvent BlockExpEvent BlockPlaceEvent Inherited Members Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Block Assembly : OpenAPI.dll Syntax public class BlockEvent : Event Constructors | Improve this Doc View Source BlockEvent(MiNET.Blocks.Block) Declaration public BlockEvent(MiNET.Blocks.Block block) Parameters Type Name Description MiNET.Blocks.Block block Properties | Improve this Doc View Source Block Declaration public MiNET.Blocks.Block Block { get; } Property Value Type Description MiNET.Blocks.Block"
  },
  "api/OpenAPI.Events.Block.BlockExpEvent.html": {
    "href": "api/OpenAPI.Events.Block.BlockExpEvent.html",
    "title": "Class BlockExpEvent",
    "keywords": "Class BlockExpEvent Dispatched when a block released experience points Inheritance System.Object Event BlockEvent BlockExpEvent BlockBreakEvent Inherited Members BlockEvent.Block Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Block Assembly : OpenAPI.dll Syntax public class BlockExpEvent : BlockEvent Constructors | Improve this Doc View Source BlockExpEvent(MiNET.Blocks.Block, Single) Declaration public BlockExpEvent(MiNET.Blocks.Block block, float experience) Parameters Type Name Description MiNET.Blocks.Block block The block that released the XP System.Single experience The XP that is to be released Properties | Improve this Doc View Source Experience The amount of XP released by the block Declaration public float Experience { get; set; } Property Value Type Description System.Single"
  },
  "api/OpenAPI.Events.Block.BlockPlaceEvent.html": {
    "href": "api/OpenAPI.Events.Block.BlockPlaceEvent.html",
    "title": "Class BlockPlaceEvent",
    "keywords": "Class BlockPlaceEvent Get's dispatched whenever a OpenPlayer tries to place a block. Inheritance System.Object Event BlockEvent BlockPlaceEvent Inherited Members BlockEvent.Block Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Block Assembly : OpenAPI.dll Syntax public class BlockPlaceEvent : BlockEvent Constructors | Improve this Doc View Source BlockPlaceEvent(OpenPlayer, MiNET.Blocks.Block) Declaration public BlockPlaceEvent(OpenPlayer player, MiNET.Blocks.Block block) Parameters Type Name Description OpenPlayer player The player that tried placing the block MiNET.Blocks.Block block The block the player was trying to place. Properties | Improve this Doc View Source Player Declaration public OpenPlayer Player { get; } Property Value Type Description OpenPlayer"
  },
  "api/OpenAPI.Events.Block.BlockStartBreakEvent.html": {
    "href": "api/OpenAPI.Events.Block.BlockStartBreakEvent.html",
    "title": "Class BlockStartBreakEvent",
    "keywords": "Class BlockStartBreakEvent Gets dispatched when a OpenPlayer start breaking a block Inheritance System.Object Event BlockEvent BlockExpEvent BlockBreakEvent BlockStartBreakEvent BlockAbortBreakEvent Implements INotifyExecution Inherited Members BlockBreakEvent.Source BlockBreakEvent.Drops BlockBreakEvent.OnEventExecution BlockBreakEvent.OnComplete(Object) BlockExpEvent.Experience BlockEvent.Block Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Block Assembly : OpenAPI.dll Syntax public class BlockStartBreakEvent : BlockBreakEvent, INotifyExecution Constructors | Improve this Doc View Source BlockStartBreakEvent(MiNET.Entities.Entity, MiNET.Blocks.Block) Declaration public BlockStartBreakEvent(MiNET.Entities.Entity player, MiNET.Blocks.Block block) Parameters Type Name Description MiNET.Entities.Entity player The player that started breaking the block. MiNET.Blocks.Block block The block that is to be destroyed Implements INotifyExecution"
  },
  "api/OpenAPI.Events.Block.html": {
    "href": "api/OpenAPI.Events.Block.html",
    "title": "Namespace OpenAPI.Events.Block",
    "keywords": "Namespace OpenAPI.Events.Block Classes BlockAbortBreakEvent Get's dispatched whenever a OpenPlayer stops breaking a block before the block could be destroyed. BlockBreakEvent Gets dispatched when a breaks a block. BlockEvent The base class for any events related to blocks BlockExpEvent Dispatched when a block released experience points BlockPlaceEvent Get's dispatched whenever a OpenPlayer tries to place a block. BlockStartBreakEvent Gets dispatched when a OpenPlayer start breaking a block"
  },
  "api/OpenAPI.Events.DuplicateTypeException.html": {
    "href": "api/OpenAPI.Events.DuplicateTypeException.html",
    "title": "Class DuplicateTypeException",
    "keywords": "Class DuplicateTypeException Inheritance System.Object DuplicateTypeException Namespace : OpenAPI.Events Assembly : OpenAPI.dll Syntax public class DuplicateTypeException : Exception"
  },
  "api/OpenAPI.Events.Entity.EntityDamageEvent.html": {
    "href": "api/OpenAPI.Events.Entity.EntityDamageEvent.html",
    "title": "Class EntityDamageEvent",
    "keywords": "Class EntityDamageEvent Dispatched when an Entity gets damaged Inheritance System.Object Event EntityEvent EntityDamageEvent Inherited Members EntityEvent.Entity Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Entity Assembly : OpenAPI.dll Syntax public class EntityDamageEvent : EntityEvent Constructors | Improve this Doc View Source EntityDamageEvent(MiNET.Entities.Entity, MiNET.Entities.Entity, DamageCause, Int32, Int32) Declaration public EntityDamageEvent(MiNET.Entities.Entity entity, MiNET.Entities.Entity source, DamageCause cause, int previousHealth, int newHealth) Parameters Type Name Description MiNET.Entities.Entity entity The entity that has been damaged MiNET.Entities.Entity source The source of the of the damage DamageCause cause The cause of the damage System.Int32 previousHealth The entity's previous health value System.Int32 newHealth The entity's new health value Properties | Improve this Doc View Source Attacker Declaration public MiNET.Entities.Entity Attacker { get; } Property Value Type Description MiNET.Entities.Entity | Improve this Doc View Source Cause Declaration public DamageCause Cause { get; } Property Value Type Description DamageCause | Improve this Doc View Source NewHealth Declaration public int NewHealth { get; } Property Value Type Description System.Int32 | Improve this Doc View Source PreviousHealth Declaration public int PreviousHealth { get; } Property Value Type Description System.Int32"
  },
  "api/OpenAPI.Events.Entity.EntityEvent.html": {
    "href": "api/OpenAPI.Events.Entity.EntityEvent.html",
    "title": "Class EntityEvent",
    "keywords": "Class EntityEvent The base class for any Entity related events Inheritance System.Object Event EntityEvent EntityDamageEvent EntityInteractEvent EntityKilledEvent EntityLevelEvent EntityRegainHealthEvent Inherited Members Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Entity Assembly : OpenAPI.dll Syntax public class EntityEvent : Event Constructors | Improve this Doc View Source EntityEvent(MiNET.Entities.Entity) Declaration public EntityEvent(MiNET.Entities.Entity entity) Parameters Type Name Description MiNET.Entities.Entity entity Properties | Improve this Doc View Source Entity Declaration public MiNET.Entities.Entity Entity { get; } Property Value Type Description MiNET.Entities.Entity"
  },
  "api/OpenAPI.Events.Entity.EntityInteractEvent.html": {
    "href": "api/OpenAPI.Events.Entity.EntityInteractEvent.html",
    "title": "Class EntityInteractEvent",
    "keywords": "Class EntityInteractEvent Dispatched when a OpenPlayer interacts with an entity Inheritance System.Object Event EntityEvent EntityInteractEvent Inherited Members EntityEvent.Entity Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Entity Assembly : OpenAPI.dll Syntax public class EntityInteractEvent : EntityEvent Constructors | Improve this Doc View Source EntityInteractEvent(MiNET.Entities.Entity, OpenPlayer, McpeInventoryTransaction.ItemUseOnEntityAction) Declaration public EntityInteractEvent(MiNET.Entities.Entity entity, OpenPlayer source, McpeInventoryTransaction.ItemUseOnEntityAction action) Parameters Type Name Description MiNET.Entities.Entity entity The entity the player has interacted with OpenPlayer source The player that initiated the interaction McpeInventoryTransaction.ItemUseOnEntityAction action The action that got initiated Properties | Improve this Doc View Source Action Declaration public McpeInventoryTransaction.ItemUseOnEntityAction Action { get; } Property Value Type Description McpeInventoryTransaction.ItemUseOnEntityAction | Improve this Doc View Source SourcePlayer Declaration public OpenPlayer SourcePlayer { get; } Property Value Type Description OpenPlayer"
  },
  "api/OpenAPI.Events.Entity.EntityKilledEvent.html": {
    "href": "api/OpenAPI.Events.Entity.EntityKilledEvent.html",
    "title": "Class EntityKilledEvent",
    "keywords": "Class EntityKilledEvent Dispatched when an entity got killed. Inheritance System.Object Event EntityEvent EntityKilledEvent Inherited Members EntityEvent.Entity Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Entity Assembly : OpenAPI.dll Syntax public class EntityKilledEvent : EntityEvent Constructors | Improve this Doc View Source EntityKilledEvent(MiNET.Entities.Entity) Declaration public EntityKilledEvent(MiNET.Entities.Entity entity) Parameters Type Name Description MiNET.Entities.Entity entity The entity that got killed."
  },
  "api/OpenAPI.Events.Entity.EntityLevelEvent.html": {
    "href": "api/OpenAPI.Events.Entity.EntityLevelEvent.html",
    "title": "Class EntityLevelEvent",
    "keywords": "Class EntityLevelEvent Inheritance System.Object Event EntityEvent EntityLevelEvent Inherited Members EntityEvent.Entity Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Entity Assembly : OpenAPI.dll Syntax public class EntityLevelEvent : EntityEvent Constructors | Improve this Doc View Source EntityLevelEvent(MiNET.Entities.Entity) Declaration public EntityLevelEvent(MiNET.Entities.Entity entity) Parameters Type Name Description MiNET.Entities.Entity entity"
  },
  "api/OpenAPI.Events.Entity.EntityRegainHealthEvent.html": {
    "href": "api/OpenAPI.Events.Entity.EntityRegainHealthEvent.html",
    "title": "Class EntityRegainHealthEvent",
    "keywords": "Class EntityRegainHealthEvent Dispatched when an entity regains health Inheritance System.Object Event EntityEvent EntityRegainHealthEvent Inherited Members EntityEvent.Entity Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Entity Assembly : OpenAPI.dll Syntax public class EntityRegainHealthEvent : EntityEvent Constructors | Improve this Doc View Source EntityRegainHealthEvent(MiNET.Entities.Entity, Int32, Int32) Declaration public EntityRegainHealthEvent(MiNET.Entities.Entity entity, int previousHealth, int newHealth) Parameters Type Name Description MiNET.Entities.Entity entity The entity who's health was regained System.Int32 previousHealth The entity's previous health System.Int32 newHealth The entity's new health Properties | Improve this Doc View Source NewHealth Declaration public int NewHealth { get; } Property Value Type Description System.Int32 | Improve this Doc View Source PreviousHealth Declaration public int PreviousHealth { get; } Property Value Type Description System.Int32"
  },
  "api/OpenAPI.Events.Entity.html": {
    "href": "api/OpenAPI.Events.Entity.html",
    "title": "Namespace OpenAPI.Events.Entity",
    "keywords": "Namespace OpenAPI.Events.Entity Classes EntityDamageEvent Dispatched when an Entity gets damaged EntityEvent The base class for any Entity related events EntityInteractEvent Dispatched when a OpenPlayer interacts with an entity EntityKilledEvent Dispatched when an entity got killed. EntityLevelEvent EntityRegainHealthEvent Dispatched when an entity regains health"
  },
  "api/OpenAPI.Events.Event.EventTaskCompleted.html": {
    "href": "api/OpenAPI.Events.Event.EventTaskCompleted.html",
    "title": "Class Event.EventTaskCompleted",
    "keywords": "Class Event.EventTaskCompleted Inheritance System.Object Event.EventTaskCompleted Namespace : OpenAPI.Events Assembly : OpenAPI.dll Syntax public class EventTaskCompleted : EventArgs Properties | Improve this Doc View Source CompletedEvent The event that finished execution Declaration public Event CompletedEvent { get; } Property Value Type Description Event | Improve this Doc View Source Source The object that executed it. Declaration public object Source { get; } Property Value Type Description System.Object"
  },
  "api/OpenAPI.Events.Event.html": {
    "href": "api/OpenAPI.Events.Event.html",
    "title": "Class Event",
    "keywords": "Class Event The base class all OpenApi Events implement Inheritance System.Object Event BlockEvent EntityEvent ExecuteableEventBase LevelEvent PlayerEvent PluginEventBase ServerClosingEvent ServerReadyEvent Namespace : OpenAPI.Events Assembly : OpenAPI.dll Syntax public abstract class Event : object Constructors | Improve this Doc View Source Event() Declaration public Event() Properties | Improve this Doc View Source IsCancelled True if the current event was cancelled. Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source SetCancelled(Boolean) Set's the Cancelled flag. Declaration public void SetCancelled(bool isCanceled) Parameters Type Name Description System.Boolean isCanceled"
  },
  "api/OpenAPI.Events.EventDispatcher.html": {
    "href": "api/OpenAPI.Events.EventDispatcher.html",
    "title": "Class EventDispatcher",
    "keywords": "Class EventDispatcher The EventDispatcher is responsible for dispatching and invoking all the registered IEventHandler methods Inheritance System.Object EventDispatcher Namespace : OpenAPI.Events Assembly : OpenAPI.dll Syntax public class EventDispatcher : object Constructors | Improve this Doc View Source EventDispatcher(OpenApi, EventDispatcher[]) Declaration public EventDispatcher(OpenApi openApi, params EventDispatcher[] dispatchers) Parameters Type Name Description OpenApi openApi EventDispatcher [] dispatchers Properties | Improve this Doc View Source Api Declaration protected OpenApi Api { get; } Property Value Type Description OpenApi Methods | Improve this Doc View Source DispatchEvent(Event) Dispatches a new Event to all methods registered with an EventHandlerAttribute Declaration public void DispatchEvent(Event e) Parameters Type Name Description Event e The event to dispatch | Improve this Doc View Source DispatchEventAsync<TEvent>(TEvent) Dispatches Declaration public Task<TEvent> DispatchEventAsync<TEvent>(TEvent e) where TEvent : Event Parameters Type Name Description TEvent e Returns Type Description Task <TEvent> Type Parameters Name Description TEvent | Improve this Doc View Source LoadFrom(Assembly) Loads all types implementing the Event class Declaration public void LoadFrom(Assembly assembly) Parameters Type Name Description Assembly assembly The assembly containing the Event implementations | Improve this Doc View Source RegisterEvents(IEventHandler) Registers all EventHandler methods with the current EventDispatcher. Declaration public void RegisterEvents(IEventHandler obj) Parameters Type Name Description IEventHandler obj The class to scan for EventHandlers | Improve this Doc View Source RegisterEventType(Type) Registers a new Event Declaration public bool RegisterEventType(Type type) Parameters Type Name Description Type type The type of the Event to register Returns Type Description System.Boolean Whether the event was succesfully registered. | Improve this Doc View Source RegisterEventType<TEvent>() Registers a new Event type with the current EventDispatcher Declaration public void RegisterEventType<TEvent>() where TEvent : Event Type Parameters Name Description TEvent The type of the Event to register Exceptions Type Condition DuplicateTypeException Thrown when the type of TEvent has already been registered. | Improve this Doc View Source Unload(Assembly) Unloads all Event 's that were registered by specified assembly Declaration public void Unload(Assembly assembly) Parameters Type Name Description Assembly assembly The assembly containing the types to be unloaded. | Improve this Doc View Source UnregisterEvents(IEventHandler) Unregisters all EventHandlerAttribute from the specified IEventHandler implementation from the current EventDispatcher After UnRegistering, the class will no longer get invoked when an event gets dispatched. Declaration public void UnregisterEvents(IEventHandler obj) Parameters Type Name Description IEventHandler obj The implementation to unregister the eventhandlers for"
  },
  "api/OpenAPI.Events.EventHandlerAttribute.html": {
    "href": "api/OpenAPI.Events.EventHandlerAttribute.html",
    "title": "Class EventHandlerAttribute",
    "keywords": "Class EventHandlerAttribute Marks the method as an Event Handler method In order for the method to be called the parent class must implement IEventHandler and be registered with an EventDispatcher Inheritance System.Object EventHandlerAttribute Namespace : OpenAPI.Events Assembly : OpenAPI.dll Syntax public class EventHandlerAttribute : Attribute Constructors | Improve this Doc View Source EventHandlerAttribute() Declaration public EventHandlerAttribute() | Improve this Doc View Source EventHandlerAttribute(EventPriority, Boolean) Declaration public EventHandlerAttribute(EventPriority priority, bool ignoreCanceled = false) Parameters Type Name Description EventPriority priority The priority to be used for this eventhandler System.Boolean ignoreCanceled See IgnoreCanceled Properties | Improve this Doc View Source IgnoreCanceled Determines whether this method should still be invoked even if another EventHandler has already cancelled the event. Declaration public bool IgnoreCanceled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Priority Determines when the methhod will be invoked by the EventDispatcher . For more details see EventPriority Declaration public EventPriority Priority { get; } Property Value Type Description EventPriority"
  },
  "api/OpenAPI.Events.EventPriority.html": {
    "href": "api/OpenAPI.Events.EventPriority.html",
    "title": "Enum EventPriority",
    "keywords": "Enum EventPriority Determines in what order the events should be handled. Highest priority is executed last, lowest is executed first. Namespace : OpenAPI.Events Assembly : OpenAPI.dll Syntax public enum EventPriority : int Fields Name Description High Gets executed 4th Highest Gets executed second to last Low Gets executed 2nd Lowest Gets executed 1st Monitor Gets executed last, always has the final say over the result Normal Gets executed 3rd"
  },
  "api/OpenAPI.Events.ExecuteableEventBase.html": {
    "href": "api/OpenAPI.Events.ExecuteableEventBase.html",
    "title": "Class ExecuteableEventBase",
    "keywords": "Class ExecuteableEventBase Inheritance System.Object Event ExecuteableEventBase Implements INotifyExecution Inherited Members Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events Assembly : OpenAPI.dll Syntax public abstract class ExecuteableEventBase : Event, INotifyExecution Constructors | Improve this Doc View Source ExecuteableEventBase() Declaration protected ExecuteableEventBase() Properties | Improve this Doc View Source OnEventExecution Invoked when an event has executed it's task. Declaration public EventHandler<Event.EventTaskCompleted> OnEventExecution { get; set; } Property Value Type Description EventHandler < Event.EventTaskCompleted > Explicit Interface Implementations | Improve this Doc View Source INotifyExecution.OnComplete(Object) Declaration void INotifyExecution.OnComplete(object source) Parameters Type Name Description System.Object source Implements INotifyExecution"
  },
  "api/OpenAPI.Events.html": {
    "href": "api/OpenAPI.Events.html",
    "title": "Namespace OpenAPI.Events",
    "keywords": "Namespace OpenAPI.Events Classes DuplicateTypeException Event The base class all OpenApi Events implement Event.EventTaskCompleted EventDispatcher The EventDispatcher is responsible for dispatching and invoking all the registered IEventHandler methods EventHandlerAttribute Marks the method as an Event Handler method In order for the method to be called the parent class must implement IEventHandler and be registered with an EventDispatcher ExecuteableEventBase Interfaces IEventHandler Classes that implement IEventHandler are able to receive events dispatched by a EventDispatcher INotifyExecution Enums EventPriority Determines in what order the events should be handled. Highest priority is executed last, lowest is executed first."
  },
  "api/OpenAPI.Events.IEventHandler.html": {
    "href": "api/OpenAPI.Events.IEventHandler.html",
    "title": "Interface IEventHandler",
    "keywords": "Interface IEventHandler Classes that implement IEventHandler are able to receive events dispatched by a EventDispatcher Namespace : OpenAPI.Events Assembly : OpenAPI.dll Syntax public interface IEventHandler"
  },
  "api/OpenAPI.Events.INotifyExecution.html": {
    "href": "api/OpenAPI.Events.INotifyExecution.html",
    "title": "Interface INotifyExecution",
    "keywords": "Interface INotifyExecution Namespace : OpenAPI.Events Assembly : OpenAPI.dll Syntax public interface INotifyExecution Properties | Improve this Doc View Source OnEventExecution Declaration EventHandler<Event.EventTaskCompleted> OnEventExecution { get; set; } Property Value Type Description EventHandler < Event.EventTaskCompleted > Methods | Improve this Doc View Source OnComplete(Object) Declaration void OnComplete(object source) Parameters Type Name Description System.Object source"
  },
  "api/OpenAPI.Events.Level.ChunkEvent.html": {
    "href": "api/OpenAPI.Events.Level.ChunkEvent.html",
    "title": "Class ChunkEvent",
    "keywords": "Class ChunkEvent The base class for any events Inheritance System.Object Event LevelEvent ChunkEvent ChunkGeneratedEvent ChunkLoadEvent ChunkSaveEvent ChunkUnloadEvent Inherited Members LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class ChunkEvent : LevelEvent Constructors | Improve this Doc View Source ChunkEvent(ChunkColumn, OpenLevel) Declaration public ChunkEvent(ChunkColumn chunk, OpenLevel level) Parameters Type Name Description ChunkColumn chunk OpenLevel level Properties | Improve this Doc View Source Chunk The chunk the event occured in Declaration public ChunkColumn Chunk { get; } Property Value Type Description ChunkColumn"
  },
  "api/OpenAPI.Events.Level.ChunkGeneratedEvent.html": {
    "href": "api/OpenAPI.Events.Level.ChunkGeneratedEvent.html",
    "title": "Class ChunkGeneratedEvent",
    "keywords": "Class ChunkGeneratedEvent Dispatched when a new chunk was generated Inheritance System.Object Event LevelEvent ChunkEvent ChunkGeneratedEvent Inherited Members ChunkEvent.Chunk LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class ChunkGeneratedEvent : ChunkEvent Constructors | Improve this Doc View Source ChunkGeneratedEvent(ChunkCoordinates, ChunkColumn, OpenLevel) Declaration public ChunkGeneratedEvent(ChunkCoordinates coordinates, ChunkColumn chunk, OpenLevel level) Parameters Type Name Description ChunkCoordinates coordinates The coordinates of the new chunk ChunkColumn chunk An instance of the affected chunk OpenLevel level The level the chunk was generated in Properties | Improve this Doc View Source Coordinates The coordinates of the chunk that got generated Declaration public ChunkCoordinates Coordinates { get; } Property Value Type Description ChunkCoordinates"
  },
  "api/OpenAPI.Events.Level.ChunkLoadEvent.html": {
    "href": "api/OpenAPI.Events.Level.ChunkLoadEvent.html",
    "title": "Class ChunkLoadEvent",
    "keywords": "Class ChunkLoadEvent Dispatched when a chunk was loaded. Inheritance System.Object Event LevelEvent ChunkEvent ChunkLoadEvent Inherited Members ChunkEvent.Chunk LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class ChunkLoadEvent : ChunkEvent Constructors | Improve this Doc View Source ChunkLoadEvent(ChunkColumn, OpenLevel) Declaration public ChunkLoadEvent(ChunkColumn chunk, OpenLevel level) Parameters Type Name Description ChunkColumn chunk The chunk that was loaded in OpenLevel level The level the chunk was loaded in to"
  },
  "api/OpenAPI.Events.Level.ChunkSaveEvent.html": {
    "href": "api/OpenAPI.Events.Level.ChunkSaveEvent.html",
    "title": "Class ChunkSaveEvent",
    "keywords": "Class ChunkSaveEvent Inheritance System.Object Event LevelEvent ChunkEvent ChunkSaveEvent Inherited Members ChunkEvent.Chunk LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class ChunkSaveEvent : ChunkEvent Constructors | Improve this Doc View Source ChunkSaveEvent(ChunkColumn, OpenLevel) Declaration public ChunkSaveEvent(ChunkColumn chunk, OpenLevel level) Parameters Type Name Description ChunkColumn chunk OpenLevel level"
  },
  "api/OpenAPI.Events.Level.ChunkUnloadEvent.html": {
    "href": "api/OpenAPI.Events.Level.ChunkUnloadEvent.html",
    "title": "Class ChunkUnloadEvent",
    "keywords": "Class ChunkUnloadEvent Dispatched when a was unloaded Inheritance System.Object Event LevelEvent ChunkEvent ChunkUnloadEvent Inherited Members ChunkEvent.Chunk LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class ChunkUnloadEvent : ChunkEvent Constructors | Improve this Doc View Source ChunkUnloadEvent(ChunkColumn, OpenLevel) Declaration public ChunkUnloadEvent(ChunkColumn chunk, OpenLevel level) Parameters Type Name Description ChunkColumn chunk The chunk that was unloaded OpenLevel level The level the chunk was unloaded from"
  },
  "api/OpenAPI.Events.Level.html": {
    "href": "api/OpenAPI.Events.Level.html",
    "title": "Namespace OpenAPI.Events.Level",
    "keywords": "Namespace OpenAPI.Events.Level Classes ChunkEvent The base class for any events ChunkGeneratedEvent Dispatched when a new chunk was generated ChunkLoadEvent Dispatched when a chunk was loaded. ChunkSaveEvent ChunkUnloadEvent Dispatched when a was unloaded LevelClosedEvent Dispatched when a OpenLevel gets closed. LevelEntityAddedEvent Dispatched when an Entity gets added to a OpenLevel LevelEntityRemovedEvent Dispatched when an entity gets removed from an OpenLevel LevelEvent LevelInitEvent Dispatched when an OpenLevel gets initiated. LevelLoadEvent LevelSaveEvent"
  },
  "api/OpenAPI.Events.Level.LevelClosedEvent.html": {
    "href": "api/OpenAPI.Events.Level.LevelClosedEvent.html",
    "title": "Class LevelClosedEvent",
    "keywords": "Class LevelClosedEvent Dispatched when a OpenLevel gets closed. Inheritance System.Object Event LevelEvent LevelClosedEvent Inherited Members LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class LevelClosedEvent : LevelEvent Constructors | Improve this Doc View Source LevelClosedEvent(OpenLevel) Declaration public LevelClosedEvent(OpenLevel world) Parameters Type Name Description OpenLevel world The level that got closed"
  },
  "api/OpenAPI.Events.Level.LevelEntityAddedEvent.html": {
    "href": "api/OpenAPI.Events.Level.LevelEntityAddedEvent.html",
    "title": "Class LevelEntityAddedEvent",
    "keywords": "Class LevelEntityAddedEvent Dispatched when an Entity gets added to a OpenLevel Inheritance System.Object Event LevelEvent LevelEntityAddedEvent Inherited Members LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class LevelEntityAddedEvent : LevelEvent Constructors | Improve this Doc View Source LevelEntityAddedEvent(OpenLevel, MiNET.Entities.Entity) Declaration public LevelEntityAddedEvent(OpenLevel world, MiNET.Entities.Entity entity) Parameters Type Name Description OpenLevel world The level the entity was added to MiNET.Entities.Entity entity The entity that has been added Properties | Improve this Doc View Source Entity The entity that got added Declaration public MiNET.Entities.Entity Entity { get; } Property Value Type Description MiNET.Entities.Entity"
  },
  "api/OpenAPI.Events.Level.LevelEntityRemovedEvent.html": {
    "href": "api/OpenAPI.Events.Level.LevelEntityRemovedEvent.html",
    "title": "Class LevelEntityRemovedEvent",
    "keywords": "Class LevelEntityRemovedEvent Dispatched when an entity gets removed from an OpenLevel Inheritance System.Object Event LevelEvent LevelEntityRemovedEvent Inherited Members LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class LevelEntityRemovedEvent : LevelEvent Constructors | Improve this Doc View Source LevelEntityRemovedEvent(OpenLevel, MiNET.Entities.Entity) Declaration public LevelEntityRemovedEvent(OpenLevel world, MiNET.Entities.Entity entity) Parameters Type Name Description OpenLevel world MiNET.Entities.Entity entity Properties | Improve this Doc View Source Entity The entity that got removed Declaration public MiNET.Entities.Entity Entity { get; } Property Value Type Description MiNET.Entities.Entity"
  },
  "api/OpenAPI.Events.Level.LevelEvent.html": {
    "href": "api/OpenAPI.Events.Level.LevelEvent.html",
    "title": "Class LevelEvent",
    "keywords": "Class LevelEvent Inheritance System.Object Event LevelEvent ChunkEvent LevelClosedEvent LevelEntityAddedEvent LevelEntityRemovedEvent LevelInitEvent LevelLoadEvent LevelSaveEvent Inherited Members Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class LevelEvent : Event Constructors | Improve this Doc View Source LevelEvent(OpenLevel) Declaration public LevelEvent(OpenLevel world) Parameters Type Name Description OpenLevel world Properties | Improve this Doc View Source Level The level that the event occured in Declaration public OpenLevel Level { get; } Property Value Type Description OpenLevel"
  },
  "api/OpenAPI.Events.Level.LevelInitEvent.html": {
    "href": "api/OpenAPI.Events.Level.LevelInitEvent.html",
    "title": "Class LevelInitEvent",
    "keywords": "Class LevelInitEvent Dispatched when an OpenLevel gets initiated. Inheritance System.Object Event LevelEvent LevelInitEvent Inherited Members LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class LevelInitEvent : LevelEvent Constructors | Improve this Doc View Source LevelInitEvent(OpenLevel) Declaration public LevelInitEvent(OpenLevel world) Parameters Type Name Description OpenLevel world The level that got initiated"
  },
  "api/OpenAPI.Events.Level.LevelLoadEvent.html": {
    "href": "api/OpenAPI.Events.Level.LevelLoadEvent.html",
    "title": "Class LevelLoadEvent",
    "keywords": "Class LevelLoadEvent Inheritance System.Object Event LevelEvent LevelLoadEvent Inherited Members LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class LevelLoadEvent : LevelEvent Constructors | Improve this Doc View Source LevelLoadEvent(OpenLevel) Declaration public LevelLoadEvent(OpenLevel world) Parameters Type Name Description OpenLevel world"
  },
  "api/OpenAPI.Events.Level.LevelSaveEvent.html": {
    "href": "api/OpenAPI.Events.Level.LevelSaveEvent.html",
    "title": "Class LevelSaveEvent",
    "keywords": "Class LevelSaveEvent Inheritance System.Object Event LevelEvent LevelSaveEvent Inherited Members LevelEvent.Level Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Level Assembly : OpenAPI.dll Syntax public class LevelSaveEvent : LevelEvent Constructors | Improve this Doc View Source LevelSaveEvent(OpenLevel) Declaration public LevelSaveEvent(OpenLevel world) Parameters Type Name Description OpenLevel world"
  },
  "api/OpenAPI.Events.Player.FoodLevelChangeEvent.html": {
    "href": "api/OpenAPI.Events.Player.FoodLevelChangeEvent.html",
    "title": "Class FoodLevelChangeEvent",
    "keywords": "Class FoodLevelChangeEvent Dispatched whenever a OpenPlayer 's food level changes Inheritance System.Object Event PlayerEvent FoodLevelChangeEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class FoodLevelChangeEvent : PlayerEvent Constructors | Improve this Doc View Source FoodLevelChangeEvent(OpenPlayer, Int32, Int32, Double, Double, Double, Double) Declaration public FoodLevelChangeEvent(OpenPlayer player, int oldLevel, int newLevel, double oldExhaustion, double newExhaustion, double oldSaturation, double newSaturation) Parameters Type Name Description OpenPlayer player System.Int32 oldLevel System.Int32 newLevel System.Double oldExhaustion System.Double newExhaustion System.Double oldSaturation System.Double newSaturation Properties | Improve this Doc View Source NewExhaustion The players new exhaustion value Declaration public double NewExhaustion { get; set; } Property Value Type Description System.Double | Improve this Doc View Source NewLevel The players new food level Declaration public int NewLevel { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NewSaturation The players new saturation level Declaration public double NewSaturation { get; set; } Property Value Type Description System.Double | Improve this Doc View Source OldExhaustion The players old exhaustion value Declaration public double OldExhaustion { get; set; } Property Value Type Description System.Double | Improve this Doc View Source OldLevel The players old food level Declaration public int OldLevel { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source OldSaturation The players old saturation level Declaration public double OldSaturation { get; set; } Property Value Type Description System.Double"
  },
  "api/OpenAPI.Events.Player.html": {
    "href": "api/OpenAPI.Events.Player.html",
    "title": "Namespace OpenAPI.Events.Player",
    "keywords": "Namespace OpenAPI.Events.Player Classes FoodLevelChangeEvent Dispatched whenever a OpenPlayer 's food level changes PlayerChatEvent Dispatched whenever an OpenPlayer says something in chat PlayerCreatedEvent Dispatched whenever a OpenPlayer was created by the OpenPlayerManager PlayerDespawnedEvent Dispatched whenever an OpenPlayer despawns PlayerEvent The base class for any OpenPlayer event PlayerGamemodeChangeEvent Dispatched when an OpenPlayer 's gamemode changed PlayerInputEvent PlayerInteractEvent Dispatched whenever an OpenPlayer interacts with a block or air PlayerItemDropEvent Dispatched when an OpenPlayer drops an item PlayerItemUseEvent Dispatched when an OpenPlayer uses an Item PlayerJoinEvent Dispatched when an OpenPlayer joins the server PlayerLoginCompleteEvent Dispatched when an OpenPlayer completes the login cycle PlayerMoveEvent Dispatched whenever an OpenPlayer moves PlayerQuitEvent Dispatched when an OpenPlayer leaves the server PlayerSetBlockEntityDataEvent Dispatched when an OpenPlayer tries to modify a blockentity's nbt data PlayerSettingsRequestEvent PlayerSpawnedEvent Dispatched when an OpenPlayer spawns in a world Enums PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger PlayerInteractEvent.PlayerInteractType"
  },
  "api/OpenAPI.Events.Player.PlayerChatEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerChatEvent.html",
    "title": "Class PlayerChatEvent",
    "keywords": "Class PlayerChatEvent Dispatched whenever an OpenPlayer says something in chat Inheritance System.Object Event PlayerEvent PlayerChatEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerChatEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerChatEvent(OpenPlayer, String) Declaration public PlayerChatEvent(OpenPlayer player, string message) Parameters Type Name Description OpenPlayer player System.String message Properties | Improve this Doc View Source Message The message sent by the player Declaration public string Message { get; set; } Property Value Type Description System.String"
  },
  "api/OpenAPI.Events.Player.PlayerCreatedEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerCreatedEvent.html",
    "title": "Class PlayerCreatedEvent",
    "keywords": "Class PlayerCreatedEvent Dispatched whenever a OpenPlayer was created by the OpenPlayerManager Inheritance System.Object Event PlayerEvent PlayerCreatedEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerCreatedEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerCreatedEvent(OpenPlayer) Declaration public PlayerCreatedEvent(OpenPlayer player) Parameters Type Name Description OpenPlayer player The player that got created"
  },
  "api/OpenAPI.Events.Player.PlayerDespawnedEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerDespawnedEvent.html",
    "title": "Class PlayerDespawnedEvent",
    "keywords": "Class PlayerDespawnedEvent Dispatched whenever an OpenPlayer despawns Inheritance System.Object Event PlayerEvent PlayerDespawnedEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerDespawnedEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerDespawnedEvent(OpenPlayer) Declaration public PlayerDespawnedEvent(OpenPlayer player) Parameters Type Name Description OpenPlayer player"
  },
  "api/OpenAPI.Events.Player.PlayerEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerEvent.html",
    "title": "Class PlayerEvent",
    "keywords": "Class PlayerEvent The base class for any OpenPlayer event Inheritance System.Object Event PlayerEvent FoodLevelChangeEvent PlayerChatEvent PlayerCreatedEvent PlayerDespawnedEvent PlayerGamemodeChangeEvent PlayerInputEvent PlayerInteractEvent PlayerItemDropEvent PlayerItemUseEvent PlayerJoinEvent PlayerLoginCompleteEvent PlayerMoveEvent PlayerQuitEvent PlayerSetBlockEntityDataEvent PlayerSettingsRequestEvent PlayerSpawnedEvent Inherited Members Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerEvent : Event Constructors | Improve this Doc View Source PlayerEvent(OpenPlayer) Declaration public PlayerEvent(OpenPlayer player) Parameters Type Name Description OpenPlayer player Properties | Improve this Doc View Source Player The player that the event occured for. Declaration public OpenPlayer Player { get; } Property Value Type Description OpenPlayer"
  },
  "api/OpenAPI.Events.Player.PlayerGamemodeChangeEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerGamemodeChangeEvent.html",
    "title": "Class PlayerGamemodeChangeEvent",
    "keywords": "Class PlayerGamemodeChangeEvent Dispatched when an OpenPlayer 's gamemode changed Inheritance System.Object Event PlayerEvent PlayerGamemodeChangeEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerGamemodeChangeEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerGamemodeChangeEvent(OpenPlayer, GameMode, GameMode, PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger) Declaration public PlayerGamemodeChangeEvent(OpenPlayer player, GameMode oldGameMode, GameMode newGameMode, PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger trigger) Parameters Type Name Description OpenPlayer player GameMode oldGameMode GameMode newGameMode PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger trigger Properties | Improve this Doc View Source NewGameMode The players gamemode after the change Declaration public GameMode NewGameMode { get; } Property Value Type Description GameMode | Improve this Doc View Source OldGameMode The players gamemode before the change Declaration public GameMode OldGameMode { get; } Property Value Type Description GameMode | Improve this Doc View Source Trigger The trigger that caused the players gamemode to change Declaration public PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger Trigger { get; } Property Value Type Description PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger"
  },
  "api/OpenAPI.Events.Player.PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger.html": {
    "href": "api/OpenAPI.Events.Player.PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger.html",
    "title": "Enum PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger",
    "keywords": "Enum PlayerGamemodeChangeEvent.PlayerGamemodeChangeTrigger Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public enum PlayerGamemodeChangeTrigger : int Fields Name Description Other Self"
  },
  "api/OpenAPI.Events.Player.PlayerInputEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerInputEvent.html",
    "title": "Class PlayerInputEvent",
    "keywords": "Class PlayerInputEvent Inheritance System.Object Event PlayerEvent PlayerInputEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerInputEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerInputEvent(OpenPlayer, PlayerInput, PlayerInputState) Declaration public PlayerInputEvent(OpenPlayer player, PlayerInput input, PlayerInputState state) Parameters Type Name Description OpenPlayer player PlayerInput input PlayerInputState state Properties | Improve this Doc View Source Input Declaration public PlayerInput Input { get; } Property Value Type Description PlayerInput | Improve this Doc View Source State Declaration public PlayerInputState State { get; } Property Value Type Description PlayerInputState"
  },
  "api/OpenAPI.Events.Player.PlayerInteractEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerInteractEvent.html",
    "title": "Class PlayerInteractEvent",
    "keywords": "Class PlayerInteractEvent Dispatched whenever an OpenPlayer interacts with a block or air Inheritance System.Object Event PlayerEvent PlayerInteractEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerInteractEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerInteractEvent(OpenPlayer, Item, BlockCoordinates, BlockFace) Declaration public PlayerInteractEvent(OpenPlayer player, Item item, BlockCoordinates blockCoordinates, BlockFace face) Parameters Type Name Description OpenPlayer player Item item BlockCoordinates blockCoordinates BlockFace face | Improve this Doc View Source PlayerInteractEvent(OpenPlayer, Item, BlockCoordinates, BlockFace, PlayerInteractEvent.PlayerInteractType) Declaration public PlayerInteractEvent(OpenPlayer player, Item item, BlockCoordinates coordinates, BlockFace face, PlayerInteractEvent.PlayerInteractType type) Parameters Type Name Description OpenPlayer player Item item BlockCoordinates coordinates BlockFace face PlayerInteractEvent.PlayerInteractType type Properties | Improve this Doc View Source Coordinates The coordinates of the block the player interacted with Declaration public BlockCoordinates Coordinates { get; } Property Value Type Description BlockCoordinates | Improve this Doc View Source Face The face that the player hit Declaration public BlockFace Face { get; } Property Value Type Description BlockFace | Improve this Doc View Source InteractType The type of interaction Declaration public PlayerInteractEvent.PlayerInteractType InteractType { get; } Property Value Type Description PlayerInteractEvent.PlayerInteractType | Improve this Doc View Source Item The item the player was holding Declaration public Item Item { get; } Property Value Type Description Item"
  },
  "api/OpenAPI.Events.Player.PlayerInteractEvent.PlayerInteractType.html": {
    "href": "api/OpenAPI.Events.Player.PlayerInteractEvent.PlayerInteractType.html",
    "title": "Enum PlayerInteractEvent.PlayerInteractType",
    "keywords": "Enum PlayerInteractEvent.PlayerInteractType Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public enum PlayerInteractType : int Fields Name Description LeftClickAir Player left clicked in air LeftClickBlock Player left clicked a block Physical Not used. RightClickAir Player right clicked in air RightClickBlock Player right clicked a block"
  },
  "api/OpenAPI.Events.Player.PlayerItemDropEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerItemDropEvent.html",
    "title": "Class PlayerItemDropEvent",
    "keywords": "Class PlayerItemDropEvent Dispatched when an OpenPlayer drops an item Inheritance System.Object Event PlayerEvent PlayerItemDropEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerItemDropEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerItemDropEvent(OpenPlayer, PlayerLocation, Item, Item) Declaration public PlayerItemDropEvent(OpenPlayer player, PlayerLocation dropFrom, Item droppedItem, Item newInventoryItem) Parameters Type Name Description OpenPlayer player PlayerLocation dropFrom Item droppedItem Item newInventoryItem Properties | Improve this Doc View Source DroppedItem The item dropped Declaration public Item DroppedItem { get; } Property Value Type Description Item | Improve this Doc View Source From The location of the player at the time of dropping Declaration public PlayerLocation From { get; } Property Value Type Description PlayerLocation | Improve this Doc View Source NewInventoryItem The item replacing the inventory slot Declaration public Item NewInventoryItem { get; } Property Value Type Description Item"
  },
  "api/OpenAPI.Events.Player.PlayerItemUseEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerItemUseEvent.html",
    "title": "Class PlayerItemUseEvent",
    "keywords": "Class PlayerItemUseEvent Dispatched when an OpenPlayer uses an Item Inheritance System.Object Event PlayerEvent PlayerItemUseEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerItemUseEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerItemUseEvent(OpenPlayer, Item) Declaration public PlayerItemUseEvent(OpenPlayer player, Item itemUsed) Parameters Type Name Description OpenPlayer player Item itemUsed Properties | Improve this Doc View Source ItemUsed The item used Declaration public Item ItemUsed { get; } Property Value Type Description Item"
  },
  "api/OpenAPI.Events.Player.PlayerJoinEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerJoinEvent.html",
    "title": "Class PlayerJoinEvent",
    "keywords": "Class PlayerJoinEvent Dispatched when an OpenPlayer joins the server Inheritance System.Object Event PlayerEvent PlayerJoinEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerJoinEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerJoinEvent(OpenPlayer) Declaration public PlayerJoinEvent(OpenPlayer player) Parameters Type Name Description OpenPlayer player"
  },
  "api/OpenAPI.Events.Player.PlayerLoginCompleteEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerLoginCompleteEvent.html",
    "title": "Class PlayerLoginCompleteEvent",
    "keywords": "Class PlayerLoginCompleteEvent Dispatched when an OpenPlayer completes the login cycle Inheritance System.Object Event PlayerEvent PlayerLoginCompleteEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerLoginCompleteEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerLoginCompleteEvent(OpenPlayer, DateTime) Declaration public PlayerLoginCompleteEvent(OpenPlayer player, DateTime loginCompleteTime) Parameters Type Name Description OpenPlayer player DateTime loginCompleteTime Properties | Improve this Doc View Source CompletionTime The time the player completed the login Declaration public DateTime CompletionTime { get; } Property Value Type Description DateTime"
  },
  "api/OpenAPI.Events.Player.PlayerMoveEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerMoveEvent.html",
    "title": "Class PlayerMoveEvent",
    "keywords": "Class PlayerMoveEvent Dispatched whenever an OpenPlayer moves Inheritance System.Object Event PlayerEvent PlayerMoveEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerMoveEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerMoveEvent(OpenPlayer, PlayerLocation, PlayerLocation, Boolean) Declaration public PlayerMoveEvent(OpenPlayer player, PlayerLocation from, PlayerLocation to, bool teleport) Parameters Type Name Description OpenPlayer player PlayerLocation from PlayerLocation to System.Boolean teleport Properties | Improve this Doc View Source From The players old location Declaration public PlayerLocation From { get; } Property Value Type Description PlayerLocation | Improve this Doc View Source IsTeleport Whether or not the player teleported Declaration public bool IsTeleport { get; } Property Value Type Description System.Boolean | Improve this Doc View Source To The players new location Declaration public PlayerLocation To { get; } Property Value Type Description PlayerLocation"
  },
  "api/OpenAPI.Events.Player.PlayerQuitEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerQuitEvent.html",
    "title": "Class PlayerQuitEvent",
    "keywords": "Class PlayerQuitEvent Dispatched when an OpenPlayer leaves the server Inheritance System.Object Event PlayerEvent PlayerQuitEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerQuitEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerQuitEvent(OpenPlayer) Declaration public PlayerQuitEvent(OpenPlayer player) Parameters Type Name Description OpenPlayer player"
  },
  "api/OpenAPI.Events.Player.PlayerSetBlockEntityDataEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerSetBlockEntityDataEvent.html",
    "title": "Class PlayerSetBlockEntityDataEvent",
    "keywords": "Class PlayerSetBlockEntityDataEvent Dispatched when an OpenPlayer tries to modify a blockentity's nbt data Inheritance System.Object Event PlayerEvent PlayerSetBlockEntityDataEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerSetBlockEntityDataEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerSetBlockEntityDataEvent(OpenPlayer, BlockEntity, NbtCompound) Declaration public PlayerSetBlockEntityDataEvent(OpenPlayer player, BlockEntity blockEntity, NbtCompound compound) Parameters Type Name Description OpenPlayer player BlockEntity blockEntity NbtCompound compound Properties | Improve this Doc View Source BlockEntity Declaration public BlockEntity BlockEntity { get; } Property Value Type Description BlockEntity | Improve this Doc View Source Compound Declaration public NbtCompound Compound { get; } Property Value Type Description NbtCompound"
  },
  "api/OpenAPI.Events.Player.PlayerSettingsRequestEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerSettingsRequestEvent.html",
    "title": "Class PlayerSettingsRequestEvent",
    "keywords": "Class PlayerSettingsRequestEvent Inheritance System.Object Event PlayerEvent PlayerSettingsRequestEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerSettingsRequestEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerSettingsRequestEvent(OpenPlayer, McpeServerSettingsRequest) Declaration public PlayerSettingsRequestEvent(OpenPlayer player, McpeServerSettingsRequest request) Parameters Type Name Description OpenPlayer player McpeServerSettingsRequest request"
  },
  "api/OpenAPI.Events.Player.PlayerSpawnedEvent.html": {
    "href": "api/OpenAPI.Events.Player.PlayerSpawnedEvent.html",
    "title": "Class PlayerSpawnedEvent",
    "keywords": "Class PlayerSpawnedEvent Dispatched when an OpenPlayer spawns in a world Inheritance System.Object Event PlayerEvent PlayerSpawnedEvent Inherited Members PlayerEvent.Player Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Player Assembly : OpenAPI.dll Syntax public class PlayerSpawnedEvent : PlayerEvent Constructors | Improve this Doc View Source PlayerSpawnedEvent(OpenPlayer) Declaration public PlayerSpawnedEvent(OpenPlayer player) Parameters Type Name Description OpenPlayer player"
  },
  "api/OpenAPI.Events.Plugins.html": {
    "href": "api/OpenAPI.Events.Plugins.html",
    "title": "Namespace OpenAPI.Events.Plugins",
    "keywords": "Namespace OpenAPI.Events.Plugins Classes PluginDisabledEvent Dispatched when a plugin gets disabled. PluginEnabledEvent PluginEventBase The base class for any plugin events"
  },
  "api/OpenAPI.Events.Plugins.PluginDisabledEvent.html": {
    "href": "api/OpenAPI.Events.Plugins.PluginDisabledEvent.html",
    "title": "Class PluginDisabledEvent",
    "keywords": "Class PluginDisabledEvent Dispatched when a plugin gets disabled. Inheritance System.Object Event PluginEventBase PluginDisabledEvent Inherited Members PluginEventBase.PluginAssembly PluginEventBase.PluginInstance Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Plugins Assembly : OpenAPI.dll Syntax public class PluginDisabledEvent : PluginEventBase Constructors | Improve this Doc View Source PluginDisabledEvent(Assembly, OpenPlugin) Declaration public PluginDisabledEvent(Assembly pluginAssembly, OpenPlugin pluginInstance) Parameters Type Name Description Assembly pluginAssembly OpenPlugin pluginInstance"
  },
  "api/OpenAPI.Events.Plugins.PluginEnabledEvent.html": {
    "href": "api/OpenAPI.Events.Plugins.PluginEnabledEvent.html",
    "title": "Class PluginEnabledEvent",
    "keywords": "Class PluginEnabledEvent Inheritance System.Object Event PluginEventBase PluginEnabledEvent Inherited Members PluginEventBase.PluginAssembly PluginEventBase.PluginInstance Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Plugins Assembly : OpenAPI.dll Syntax public class PluginEnabledEvent : PluginEventBase Constructors | Improve this Doc View Source PluginEnabledEvent(Assembly, OpenPlugin) Declaration public PluginEnabledEvent(Assembly pluginAssembly, OpenPlugin pluginInstance) Parameters Type Name Description Assembly pluginAssembly OpenPlugin pluginInstance"
  },
  "api/OpenAPI.Events.Plugins.PluginEventBase.html": {
    "href": "api/OpenAPI.Events.Plugins.PluginEventBase.html",
    "title": "Class PluginEventBase",
    "keywords": "Class PluginEventBase The base class for any plugin events Inheritance System.Object Event PluginEventBase PluginDisabledEvent PluginEnabledEvent Inherited Members Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Plugins Assembly : OpenAPI.dll Syntax public class PluginEventBase : Event Constructors | Improve this Doc View Source PluginEventBase(Assembly, OpenPlugin) Declaration protected PluginEventBase(Assembly pluginAssembly, OpenPlugin pluginInstance) Parameters Type Name Description Assembly pluginAssembly OpenPlugin pluginInstance Properties | Improve this Doc View Source PluginAssembly The assembly the plugin was loaded from Declaration public Assembly PluginAssembly { get; set; } Property Value Type Description Assembly | Improve this Doc View Source PluginInstance The plugin instance Declaration public OpenPlugin PluginInstance { get; set; } Property Value Type Description OpenPlugin"
  },
  "api/OpenAPI.Events.Server.html": {
    "href": "api/OpenAPI.Events.Server.html",
    "title": "Namespace OpenAPI.Events.Server",
    "keywords": "Namespace OpenAPI.Events.Server Classes ServerClosingEvent Gets dispatched when the server is shutting down ServerReadyEvent Gets dispatched when the server has fully started up."
  },
  "api/OpenAPI.Events.Server.ServerClosingEvent.html": {
    "href": "api/OpenAPI.Events.Server.ServerClosingEvent.html",
    "title": "Class ServerClosingEvent",
    "keywords": "Class ServerClosingEvent Gets dispatched when the server is shutting down Inheritance System.Object Event ServerClosingEvent Inherited Members Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Server Assembly : OpenAPI.dll Syntax public class ServerClosingEvent : Event Constructors | Improve this Doc View Source ServerClosingEvent(OpenServer) Declaration public ServerClosingEvent(OpenServer server) Parameters Type Name Description OpenServer server Properties | Improve this Doc View Source Server The server instance that is shutting down Declaration public OpenServer Server { get; } Property Value Type Description OpenServer"
  },
  "api/OpenAPI.Events.Server.ServerReadyEvent.html": {
    "href": "api/OpenAPI.Events.Server.ServerReadyEvent.html",
    "title": "Class ServerReadyEvent",
    "keywords": "Class ServerReadyEvent Gets dispatched when the server has fully started up. Inheritance System.Object Event ServerReadyEvent Inherited Members Event.IsCancelled Event.SetCancelled(Boolean) Namespace : OpenAPI.Events.Server Assembly : OpenAPI.dll Syntax public class ServerReadyEvent : Event Constructors | Improve this Doc View Source ServerReadyEvent(OpenServer) Declaration public ServerReadyEvent(OpenServer server) Parameters Type Name Description OpenServer server Properties | Improve this Doc View Source Server The server instance that started up Declaration public OpenServer Server { get; } Property Value Type Description OpenServer"
  },
  "api/OpenAPI.html": {
    "href": "api/OpenAPI.html",
    "title": "Namespace OpenAPI",
    "keywords": "Namespace OpenAPI Classes Logger OpenApi OpenMotdProvider OpenServer OpenServerInfo OpenServerInfo.MetricsEvent"
  },
  "api/OpenAPI.Items.html": {
    "href": "api/OpenAPI.Items.html",
    "title": "Namespace OpenAPI.Items",
    "keywords": "Namespace OpenAPI.Items Classes OpenItemFactory"
  },
  "api/OpenAPI.Items.OpenItemFactory.html": {
    "href": "api/OpenAPI.Items.OpenItemFactory.html",
    "title": "Class OpenItemFactory",
    "keywords": "Class OpenItemFactory Inheritance System.Object OpenItemFactory Namespace : OpenAPI.Items Assembly : OpenAPI.dll Syntax public class OpenItemFactory : ICustomItemFactory Constructors | Improve this Doc View Source OpenItemFactory() Declaration public OpenItemFactory() Methods | Improve this Doc View Source GetItem(Int16, Int16, Int32) Declaration public Item GetItem(short id, short metadata, int count) Parameters Type Name Description System.Int16 id System.Int16 metadata System.Int32 count Returns Type Description Item | Improve this Doc View Source TryRegisterItem(Int16, Int16, Func<Item>) Declaration public bool TryRegisterItem(short id, short metadata, Func<Item> itemFactory) Parameters Type Name Description System.Int16 id System.Int16 metadata Func < Item > itemFactory Returns Type Description System.Boolean"
  },
  "api/OpenAPI.Logger.html": {
    "href": "api/OpenAPI.Logger.html",
    "title": "Class Logger",
    "keywords": "Class Logger Inheritance System.Object Logger Namespace : OpenAPI Assembly : OpenAPI.dll Syntax public class Logger : object Methods | Improve this Doc View Source Error(String) Declaration public void Error(string message) Parameters Type Name Description System.String message | Improve this Doc View Source GetLogger(String) Declaration public static Logger GetLogger(string name) Parameters Type Name Description System.String name Returns Type Description Logger | Improve this Doc View Source GetLogger(Type) Declaration public static Logger GetLogger(Type type) Parameters Type Name Description Type type Returns Type Description Logger | Improve this Doc View Source Info(String) Declaration public void Info(string message) Parameters Type Name Description System.String message | Improve this Doc View Source Warn(String) Declaration public void Warn(string message) Parameters Type Name Description System.String message"
  },
  "api/OpenAPI.OpenApi.html": {
    "href": "api/OpenAPI.OpenApi.html",
    "title": "Class OpenApi",
    "keywords": "Class OpenApi Inheritance System.Object OpenApi Namespace : OpenAPI Assembly : OpenAPI.dll Syntax public class OpenApi : object Constructors | Improve this Doc View Source OpenApi() Declaration public OpenApi() Properties | Improve this Doc View Source CommandManager Declaration public CommandManager CommandManager { get; } Property Value Type Description CommandManager | Improve this Doc View Source EventDispatcher The root EventDispatcher If you want to receive all server wide events Event this is the instance to do so. Declaration public EventDispatcher EventDispatcher { get; } Property Value Type Description EventDispatcher | Improve this Doc View Source ItemFactory The OpenItemFactory instance used globally Declaration public OpenItemFactory ItemFactory { get; } Property Value Type Description OpenItemFactory | Improve this Doc View Source LevelManager The OpenLevelManager instance responsible for all Levels OpenLevel Declaration public OpenLevelManager LevelManager { get; } Property Value Type Description OpenLevelManager | Improve this Doc View Source MotdProvider The OpenMotdProvider responsible for the MOTD's displayed on the client serverlist Declaration public OpenMotdProvider MotdProvider { get; } Property Value Type Description OpenMotdProvider | Improve this Doc View Source OpenServer The server instance handling all networking etc Declaration public OpenServer OpenServer { get; } Property Value Type Description OpenServer | Improve this Doc View Source PlayerManager The root OpenPlayerManager responsible for keeping track of all Online Players Declaration public OpenPlayerManager PlayerManager { get; } Property Value Type Description OpenPlayerManager | Improve this Doc View Source PluginManager The OpenPluginManager instance responsible for any loaded plugins Declaration public OpenPluginManager PluginManager { get; } Property Value Type Description OpenPluginManager | Improve this Doc View Source ResourcePackProvider Manages the resourcepacks sent to players Declaration public ResourcePackProvider ResourcePackProvider { get; } Property Value Type Description ResourcePackProvider | Improve this Doc View Source ServerInfo Declaration public OpenServerInfo ServerInfo { get; } Property Value Type Description OpenServerInfo"
  },
  "api/OpenAPI.OpenMotdProvider.html": {
    "href": "api/OpenAPI.OpenMotdProvider.html",
    "title": "Class OpenMotdProvider",
    "keywords": "Class OpenMotdProvider Inheritance System.Object OpenMotdProvider Namespace : OpenAPI Assembly : OpenAPI.dll Syntax public class OpenMotdProvider : MotdProvider Constructors | Improve this Doc View Source OpenMotdProvider(OpenApi) Declaration public OpenMotdProvider(OpenApi api) Parameters Type Name Description OpenApi api Properties | Improve this Doc View Source Api Declaration public OpenApi Api { get; } Property Value Type Description OpenApi Methods | Improve this Doc View Source GetMotd(ConnectionInfo, IPEndPoint, Boolean) Declaration public override string GetMotd(ConnectionInfo serverInfo, IPEndPoint caller, bool eduMotd = false) Parameters Type Name Description ConnectionInfo serverInfo IPEndPoint caller System.Boolean eduMotd Returns Type Description System.String"
  },
  "api/OpenAPI.OpenServer.html": {
    "href": "api/OpenAPI.OpenServer.html",
    "title": "Class OpenServer",
    "keywords": "Class OpenServer Inheritance System.Object OpenServer Namespace : OpenAPI Assembly : OpenAPI.dll Syntax public class OpenServer : MiNET.MiNetServer Constructors | Improve this Doc View Source OpenServer() Declaration public OpenServer() Fields | Improve this Doc View Source OnServerShutdown Declaration public EventHandler OnServerShutdown Field Value Type Description EventHandler Properties | Improve this Doc View Source FastThreadPool Declaration public static DedicatedThreadPool FastThreadPool { get; } Property Value Type Description DedicatedThreadPool Methods | Improve this Doc View Source StartServer() Starts the server Declaration public bool StartServer() Returns Type Description System.Boolean | Improve this Doc View Source StopServer() Stops the server gracefully Declaration public bool StopServer() Returns Type Description System.Boolean"
  },
  "api/OpenAPI.OpenServerInfo.html": {
    "href": "api/OpenAPI.OpenServerInfo.html",
    "title": "Class OpenServerInfo",
    "keywords": "Class OpenServerInfo Inheritance System.Object OpenServerInfo Namespace : OpenAPI Assembly : OpenAPI.dll Syntax public class OpenServerInfo : ConnectionInfo Constructors | Improve this Doc View Source OpenServerInfo(RakConnection, OpenApi, ConcurrentDictionary<IPEndPoint, RakSession>, LevelManager) Declaration public OpenServerInfo(RakConnection connection, OpenApi api, ConcurrentDictionary<IPEndPoint, RakSession> playerSessions, LevelManager levelManager) Parameters Type Name Description RakConnection connection OpenApi api ConcurrentDictionary < IPEndPoint , RakSession > playerSessions LevelManager levelManager Fields | Improve this Doc View Source EventsDispatchedPerSecond Declaration public long EventsDispatchedPerSecond Field Value Type Description System.Int64 | Improve this Doc View Source Levels Declaration public long Levels Field Value Type Description System.Int64 | Improve this Doc View Source OnMetricsReport Declaration public EventHandler<OpenServerInfo.MetricsEvent> OnMetricsReport Field Value Type Description EventHandler < OpenServerInfo.MetricsEvent > Properties | Improve this Doc View Source AvgSizePerPacketIn Declaration public long AvgSizePerPacketIn { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source AvgSizePerPacketOut Declaration public long AvgSizePerPacketOut { get; set; } Property Value Type Description System.Int64 Methods | Improve this Doc View Source Init() Declaration public void Init() | Improve this Doc View Source OnDisable() Declaration public void OnDisable() | Improve this Doc View Source OnEnable() Declaration public void OnEnable()"
  },
  "api/OpenAPI.OpenServerInfo.MetricsEvent.html": {
    "href": "api/OpenAPI.OpenServerInfo.MetricsEvent.html",
    "title": "Class OpenServerInfo.MetricsEvent",
    "keywords": "Class OpenServerInfo.MetricsEvent Inheritance System.Object OpenServerInfo.MetricsEvent Namespace : OpenAPI Assembly : OpenAPI.dll Syntax public class MetricsEvent : object Properties | Improve this Doc View Source AckIn The amount of ack's received since last measurement Declaration public long AckIn { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source AckOut The amount of ack's sent since last measurement Declaration public long AckOut { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source AvgSizePerPacketIn Declaration public long AvgSizePerPacketIn { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source AvgSizePerPacketOut Declaration public long AvgSizePerPacketOut { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source DeniedConnections The amount of connections that were denied since last measurement Declaration public long DeniedConnections { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source EventsDispatched The amount of events dispatched since last measurement Declaration public long EventsDispatched { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Failures The amount of packet failures since last measurement Declaration public long Failures { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source NakIn The amount of nak's received since last measurement Declaration public long NakIn { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source NetworkDownloadBps The amount of bytes received since last measurement Declaration public long NetworkDownloadBps { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source NetworkUploadBps The amount of bytes uploaded since last measurement Declaration public long NetworkUploadBps { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source PacketsIn The amount of packets that have come in since last measurement Declaration public long PacketsIn { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source PacketsOut The amount of packets that have gone out since last measurement Declaration public long PacketsOut { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Players The amount of players connected to the server at time of measurement Declaration public long Players { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source PortThreads The amount of completion ports used at time of measurement Declaration public long PortThreads { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Resends The amount of packet re-sends since last measurement Declaration public long Resends { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source WorkerThreads The amount of worker threads used at time of measurement Declaration public long WorkerThreads { get; set; } Property Value Type Description System.Int64"
  },
  "api/OpenAPI.Permission.html": {
    "href": "api/OpenAPI.Permission.html",
    "title": "Namespace OpenAPI.Permission",
    "keywords": "Namespace OpenAPI.Permission Classes PermissionGroup PermissionManager"
  },
  "api/OpenAPI.Permission.PermissionGroup.html": {
    "href": "api/OpenAPI.Permission.PermissionGroup.html",
    "title": "Class PermissionGroup",
    "keywords": "Class PermissionGroup Inheritance System.Object PermissionGroup Namespace : OpenAPI.Permission Assembly : OpenAPI.dll Syntax public class PermissionGroup : IEnumerable<KeyValuePair<string, bool>> Constructors | Improve this Doc View Source PermissionGroup(String) Declaration public PermissionGroup(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Dirty Declaration public bool Dirty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[String] Declaration public bool this[string permission] { get; set; } Parameters Type Name Description System.String permission Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Contains(String) Declaration public bool Contains(string permissionIntern) Parameters Type Name Description System.String permissionIntern Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator | Improve this Doc View Source RemovePermission(String) Declaration public void RemovePermission(string permission) Parameters Type Name Description System.String permission | Improve this Doc View Source SetPermission(String, Boolean) Declaration public void SetPermission(string permission, bool value) Parameters Type Name Description System.String permission System.Boolean value"
  },
  "api/OpenAPI.Permission.PermissionManager.html": {
    "href": "api/OpenAPI.Permission.PermissionManager.html",
    "title": "Class PermissionManager",
    "keywords": "Class PermissionManager Inheritance System.Object PermissionManager Namespace : OpenAPI.Permission Assembly : OpenAPI.dll Syntax public class PermissionManager : object Properties | Improve this Doc View Source Dirty Declaration public bool Dirty { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source AddPermissionGroup(PermissionGroup) Declaration public void AddPermissionGroup(PermissionGroup group) Parameters Type Name Description PermissionGroup group | Improve this Doc View Source HasPermission(String) Declaration public bool HasPermission(string permission) Parameters Type Name Description System.String permission Returns Type Description System.Boolean | Improve this Doc View Source Update() Declaration public void Update()"
  },
  "api/OpenAPI.Player.html": {
    "href": "api/OpenAPI.Player.html",
    "title": "Namespace OpenAPI.Player",
    "keywords": "Namespace OpenAPI.Player Classes OpenPlayer The Player class used for all Players connected to an OpenAPI server. OpenPlayerInventory OpenPlayerManager Holds all player's connected to the OpenServer instance. Interfaces IOpenPlayerAttribute"
  },
  "api/OpenAPI.Player.IOpenPlayerAttribute.html": {
    "href": "api/OpenAPI.Player.IOpenPlayerAttribute.html",
    "title": "Interface IOpenPlayerAttribute",
    "keywords": "Interface IOpenPlayerAttribute Namespace : OpenAPI.Player Assembly : OpenAPI.dll Syntax public interface IOpenPlayerAttribute"
  },
  "api/OpenAPI.Player.OpenPlayer.html": {
    "href": "api/OpenAPI.Player.OpenPlayer.html",
    "title": "Class OpenPlayer",
    "keywords": "Class OpenPlayer The Player class used for all Players connected to an OpenAPI server. Inheritance System.Object OpenPlayer Implements OpenAPI.Locale.ILocaleReceiver OpenAPI.Locale.ILocalizable Namespace : OpenAPI.Player Assembly : OpenAPI.dll Syntax public class OpenPlayer : MiNET.Player, ILocaleReceiver, ILocalizable Constructors | Improve this Doc View Source OpenPlayer(OpenServer, IPEndPoint, OpenApi) Creates a new OpenPlayer instance. Declaration public OpenPlayer(OpenServer server, IPEndPoint endPoint, OpenApi api) Parameters Type Name Description OpenServer server The server instance the player connected through IPEndPoint endPoint The player's remote endpoint OpenApi api An instance of the API Fields | Improve this Doc View Source CapturePlayerInputMode Wheter to capture player keyboard input, if true HandleMcpePlayerAction(McpePlayerAction) will try to capture every keystroke. Declaration public bool CapturePlayerInputMode Field Value Type Description System.Boolean Properties | Improve this Doc View Source Culture The player's culture info, can be used for localization purposes Declaration public CultureInfo Culture { get; } Property Value Type Description CultureInfo | Improve this Doc View Source Disguise Can be used to Disguise a player into any Entity. See EntityDisguise and Can be undone by setting the value to null. Declaration public EntityDisguise Disguise { get; set; } Property Value Type Description EntityDisguise | Improve this Doc View Source EventDispatcher The EventDispatcher that can be used to listen to any events for this player. Declaration public EventDispatcher EventDispatcher { get; } Property Value Type Description EventDispatcher | Improve this Doc View Source IsDisguised Whether the player is currently Disguised using the Disguise property Declaration public bool IsDisguised { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsXbox Returns true if player is authenticated with an online-mode account Declaration public bool IsXbox { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Level The OpenLevel instance the player is currently in. Declaration public OpenLevel Level { get; } Property Value Type Description OpenLevel | Improve this Doc View Source Permissions The PermissionManager for this player Declaration public PermissionManager Permissions { get; } Property Value Type Description PermissionManager Methods | Improve this Doc View Source AcceptPlayerMove(McpeMovePlayer, Boolean, Boolean) Declaration protected override bool AcceptPlayerMove(McpeMovePlayer message, bool isOnGround, bool isFlyingHorizontally) Parameters Type Name Description McpeMovePlayer message System.Boolean isOnGround System.Boolean isFlyingHorizontally Returns Type Description System.Boolean | Improve this Doc View Source DespawnFromPlayers(MiNET.Player[]) Declaration public override void DespawnFromPlayers(MiNET.Player[] players) Parameters Type Name Description MiNET.Player [] players | Improve this Doc View Source GetAttribute<TAttribute>() Allows you to retrieve the value for any PlayerAttributes set on a player IOpenPlayerAttribute Declaration public TAttribute GetAttribute<TAttribute>() where TAttribute : class, IOpenPlayerAttribute Returns Type Description TAttribute The value for the requested attribute, or null if no value was found. Type Parameters Name Description TAttribute The attribute type to retrieve its value for | Improve this Doc View Source HandleItemReleaseTransaction(ItemReleaseTransaction) Declaration protected override void HandleItemReleaseTransaction(ItemReleaseTransaction transaction) Parameters Type Name Description ItemReleaseTransaction transaction | Improve this Doc View Source HandleItemUseOnEntityTransaction(ItemUseOnEntityTransaction) Declaration protected override void HandleItemUseOnEntityTransaction(ItemUseOnEntityTransaction transaction) Parameters Type Name Description ItemUseOnEntityTransaction transaction | Improve this Doc View Source HandleItemUseTransaction(ItemUseTransaction) Declaration protected override void HandleItemUseTransaction(ItemUseTransaction transaction) Parameters Type Name Description ItemUseTransaction transaction | Improve this Doc View Source HandleMcpeAdventureSettings(McpeAdventureSettings) Declaration public override void HandleMcpeAdventureSettings(McpeAdventureSettings message) Parameters Type Name Description McpeAdventureSettings message | Improve this Doc View Source HandleMcpeBlockEntityData(McpeBlockEntityData) Declaration public override void HandleMcpeBlockEntityData(McpeBlockEntityData message) Parameters Type Name Description McpeBlockEntityData message | Improve this Doc View Source HandleMcpeCommandRequest(McpeCommandRequest) Handles any incoming commands. Declaration public override void HandleMcpeCommandRequest(McpeCommandRequest message) Parameters Type Name Description McpeCommandRequest message | Improve this Doc View Source HandleMcpeInteract(McpeInteract) Declaration public override void HandleMcpeInteract(McpeInteract message) Parameters Type Name Description McpeInteract message | Improve this Doc View Source HandleMcpePlayerAction(McpePlayerAction) Declaration public override void HandleMcpePlayerAction(McpePlayerAction message) Parameters Type Name Description McpePlayerAction message | Improve this Doc View Source HandleMcpePlayerInput(McpePlayerInput) Handles player input, so we can determine what buttons are pressed by the client. Declaration public override void HandleMcpePlayerInput(McpePlayerInput message) Parameters Type Name Description McpePlayerInput message | Improve this Doc View Source HandleMcpeResourcePackChunkRequest(McpeResourcePackChunkRequest) Declaration public override void HandleMcpeResourcePackChunkRequest(McpeResourcePackChunkRequest message) Parameters Type Name Description McpeResourcePackChunkRequest message | Improve this Doc View Source HandleMcpeResourcePackClientResponse(McpeResourcePackClientResponse) Declaration public override void HandleMcpeResourcePackClientResponse(McpeResourcePackClientResponse message) Parameters Type Name Description McpeResourcePackClientResponse message | Improve this Doc View Source HandleMcpeSetPlayerGameType(McpeSetPlayerGameType) Declaration public override void HandleMcpeSetPlayerGameType(McpeSetPlayerGameType message) Parameters Type Name Description McpeSetPlayerGameType message | Improve this Doc View Source HandleMcpeText(McpeText) Handles incoming chat messages Declaration public override void HandleMcpeText(McpeText message) Parameters Type Name Description McpeText message | Improve this Doc View Source HandleTransactionRecords(List<TransactionRecord>) Declaration protected override void HandleTransactionRecords(List<TransactionRecord> records) Parameters Type Name Description List < TransactionRecord > records | Improve this Doc View Source InitializePlayer() Initializes the player Declaration public override void InitializePlayer() | Improve this Doc View Source OnPlayerJoin(PlayerEventArgs) Declaration protected override void OnPlayerJoin(PlayerEventArgs e) Parameters Type Name Description PlayerEventArgs e | Improve this Doc View Source OnPlayerJoining(PlayerEventArgs) Declaration protected override void OnPlayerJoining(PlayerEventArgs e) Parameters Type Name Description PlayerEventArgs e | Improve this Doc View Source OnPlayerLeave(PlayerEventArgs) Declaration protected override void OnPlayerLeave(PlayerEventArgs e) Parameters Type Name Description PlayerEventArgs e | Improve this Doc View Source OnTicked(PlayerEventArgs) Declaration protected override void OnTicked(PlayerEventArgs e) Parameters Type Name Description PlayerEventArgs e | Improve this Doc View Source OnTicking(PlayerEventArgs) Declaration protected override void OnTicking(PlayerEventArgs e) Parameters Type Name Description PlayerEventArgs e | Improve this Doc View Source RefreshCommands() Declaration public void RefreshCommands() | Improve this Doc View Source SendAvailableCommands() Sends the players available command set Declaration protected override void SendAvailableCommands() | Improve this Doc View Source SendLocalizedMessage(String, MessageType, MiNET.Player) Declaration public void SendLocalizedMessage(string text, MessageType type = null, MiNET.Player sender = null) Parameters Type Name Description System.String text MessageType type MiNET.Player sender | Improve this Doc View Source SendLocalizedMessage(String, Object[], MessageType, MiNET.Player) Declaration public void SendLocalizedMessage(string text, object[] parameters = null, MessageType type = null, MiNET.Player sender = null) Parameters Type Name Description System.String text System.Object [] parameters MessageType type MiNET.Player sender | Improve this Doc View Source SendLocalizedTitle(String, Object[], TitleType, Int32, Int32, Int32, MiNET.Player) Declaration public void SendLocalizedTitle(string text, object[] parameters = null, TitleType type = null, int fadeIn = 6, int fadeOut = 6, int stayTime = 20, MiNET.Player sender = null) Parameters Type Name Description System.String text System.Object [] parameters TitleType type System.Int32 fadeIn System.Int32 fadeOut System.Int32 stayTime MiNET.Player sender | Improve this Doc View Source SendLocalizedTitle(String, TitleType, Int32, Int32, Int32, MiNET.Player) Declaration public void SendLocalizedTitle(string text, TitleType type = null, int fadeIn = 6, int fadeOut = 6, int stayTime = 20, MiNET.Player sender = null) Parameters Type Name Description System.String text TitleType type System.Int32 fadeIn System.Int32 fadeOut System.Int32 stayTime MiNET.Player sender | Improve this Doc View Source SendResourcePacksInfo() Declaration public override void SendResourcePacksInfo() | Improve this Doc View Source SendResourcePackStack() Declaration public override void SendResourcePackStack() | Improve this Doc View Source SetAttribute<TAttribute>(TAttribute) Allows you to store extra data on a player using PlayerAttributes IOpenPlayerAttribute Declaration public void SetAttribute<TAttribute>(TAttribute attribute) where TAttribute : class, IOpenPlayerAttribute Parameters Type Name Description TAttribute attribute The value to set the attribute to Type Parameters Name Description TAttribute The type of the attribute you wish to set. | Improve this Doc View Source SetGamemode(GameMode) Set's the players gamemode to the specified gamemode Declaration public void SetGamemode(GameMode gameMode) Parameters Type Name Description GameMode gameMode The gamemode to set for the player | Improve this Doc View Source SpawnToPlayers(MiNET.Player[]) Declaration public override void SpawnToPlayers(MiNET.Player[] players) Parameters Type Name Description MiNET.Player [] players | Improve this Doc View Source Teleport(PlayerLocation) Teleports the player to specified position Declaration public override void Teleport(PlayerLocation newPosition) Parameters Type Name Description PlayerLocation newPosition The position to teleport the player to | Improve this Doc View Source TransferToServer(IPEndPoint) Transfers the player to a different server Note, only supports IPv4 addresses Declaration public void TransferToServer(IPEndPoint endpoint) Parameters Type Name Description IPEndPoint endpoint The endpoint to transfer to Implements OpenAPI.Locale.ILocaleReceiver OpenAPI.Locale.ILocalizable"
  },
  "api/OpenAPI.Player.OpenPlayerInventory.html": {
    "href": "api/OpenAPI.Player.OpenPlayerInventory.html",
    "title": "Class OpenPlayerInventory",
    "keywords": "Class OpenPlayerInventory Inheritance System.Object OpenPlayerInventory Namespace : OpenAPI.Player Assembly : OpenAPI.dll Syntax public class OpenPlayerInventory : PlayerInventory Constructors | Improve this Doc View Source OpenPlayerInventory(OpenPlayer) Declaration public OpenPlayerInventory(OpenPlayer player) Parameters Type Name Description OpenPlayer player Methods | Improve this Doc View Source GetItemInHand() Declaration public override Item GetItemInHand() Returns Type Description Item | Improve this Doc View Source HasItems(Int16, Int16, Int32) Declaration public bool HasItems(short itemId, short meta, int count) Parameters Type Name Description System.Int16 itemId System.Int16 meta System.Int32 count Returns Type Description System.Boolean | Improve this Doc View Source TakeItems(Int16, Int16, Int32) Declaration public void TakeItems(short itemId, short meta, int count) Parameters Type Name Description System.Int16 itemId System.Int16 meta System.Int32 count"
  },
  "api/OpenAPI.Player.OpenPlayerManager.html": {
    "href": "api/OpenAPI.Player.OpenPlayerManager.html",
    "title": "Class OpenPlayerManager",
    "keywords": "Class OpenPlayerManager Holds all player's connected to the OpenServer instance. Inheritance System.Object OpenPlayerManager Implements IEventHandler Namespace : OpenAPI.Player Assembly : OpenAPI.dll Syntax public class OpenPlayerManager : PlayerFactory, IEventHandler Constructors | Improve this Doc View Source OpenPlayerManager(OpenApi) Creates a new instance of the OpenPlayerManager Declaration public OpenPlayerManager(OpenApi plugin) Parameters Type Name Description OpenApi plugin Methods | Improve this Doc View Source AddPlayer(PlayerJoinEvent) Declaration public void AddPlayer(PlayerJoinEvent e) Parameters Type Name Description PlayerJoinEvent e | Improve this Doc View Source CreatePlayer(MiNetServer, IPEndPoint, PlayerInfo) Declaration public override MiNET.Player CreatePlayer(MiNetServer server, IPEndPoint endPoint, PlayerInfo playerInfo) Parameters Type Name Description MiNetServer server IPEndPoint endPoint PlayerInfo playerInfo Returns Type Description MiNET.Player | Improve this Doc View Source GetPlayers() Get an array of currently connected players Declaration public OpenPlayer[] GetPlayers() Returns Type Description OpenPlayer [] A list of Players | Improve this Doc View Source RemovePlayer(PlayerQuitEvent) Declaration public void RemovePlayer(PlayerQuitEvent e) Parameters Type Name Description PlayerQuitEvent e | Improve this Doc View Source TryGetPlayer(String, out OpenPlayer, StringComparison) Get a player by username Declaration public bool TryGetPlayer(string name, out OpenPlayer player, StringComparison stringComparison = null) Parameters Type Name Description System.String name The username to lookup OpenPlayer player If a match was found, returns the best match. Otherwise returns null. StringComparison stringComparison The string comparison mode to use, defaults to InvariantCultureIgnoreCase Returns Type Description System.Boolean True if a player was found | Improve this Doc View Source TryGetPlayers(String, out OpenPlayer[], StringComparison) Get's an array of players based on their username Declaration public bool TryGetPlayers(string name, out OpenPlayer[] player, StringComparison stringComparison = null) Parameters Type Name Description System.String name The username to lookup OpenPlayer [] player If a match was found, returns a list of matches. Otherwise returns null. StringComparison stringComparison The string comparison mode to use, defaults to InvariantCultureIgnoreCase Returns Type Description System.Boolean Implements IEventHandler"
  },
  "api/OpenAPI.Plugins.DependencyContainer.html": {
    "href": "api/OpenAPI.Plugins.DependencyContainer.html",
    "title": "Class DependencyContainer",
    "keywords": "Class DependencyContainer A dependency injection container Inheritance System.Object DependencyContainer Namespace : OpenAPI.Plugins Assembly : OpenAPI.dll Syntax public class DependencyContainer : object Constructors | Improve this Doc View Source DependencyContainer() Declaration public DependencyContainer() Methods | Improve this Doc View Source CreateInstanceOf(Type) Use the DependencyContainer to create an instance for any type with a public constructor. Declaration public object CreateInstanceOf(Type type) Parameters Type Name Description Type type The type of the instance to create Returns Type Description System.Object An instance of type | Improve this Doc View Source CreateInstanceOf<TType>() Use the DependencyContainer to create an instance for any type with a public constructor. Declaration public TType CreateInstanceOf<TType>() Returns Type Description TType Type Parameters Name Description TType | Improve this Doc View Source Register<TType>(DependencyLifetime) Registers a new service Declaration public void Register<TType>(DependencyLifetime lifetime = DependencyLifetime.Singleton) Parameters Type Name Description DependencyLifetime lifetime How long to keep the service alive for Type Parameters Name Description TType The type of service to register Exceptions Type Condition DuplicateTypeException Thrown when a service of the same type has already been registered | Improve this Doc View Source RegisterSingleton(Type, Object) Registers a new singleton service Declaration public void RegisterSingleton(Type type, object value) Parameters Type Name Description Type type System.Object value | Improve this Doc View Source RegisterSingleton<TType>(TType) Registers a new singleton service Declaration public void RegisterSingleton<TType>(TType value) Parameters Type Name Description TType value The instance to use for dependency injection Type Parameters Name Description TType The type of service to register Exceptions Type Condition DuplicateTypeException Thrown when a service of the same type has already been registered | Improve this Doc View Source Remove(Type) Remove a service from dependency injection Declaration public void Remove(Type type) Parameters Type Name Description Type type | Improve this Doc View Source Remove<TType>() Remove a service from dependency injection Declaration public void Remove<TType>() Type Parameters Name Description TType | Improve this Doc View Source Resolve(Type) Resolve a service Declaration public object Resolve(Type type) Parameters Type Name Description Type type Returns Type Description System.Object The resolved service | Improve this Doc View Source Resolve<TType>() Resolve a service Declaration public TType Resolve<TType>() Returns Type Description TType The resolved service Type Parameters Name Description TType The type to resolve. | Improve this Doc View Source TryResolve(Type, out Object) Tries to resolve a service Declaration public bool TryResolve(Type type, out object dependency) Parameters Type Name Description Type type The type of service to resolve System.Object dependency The resolved service. Returns Type Description System.Boolean Whether the service was able to be resolved or not | Improve this Doc View Source TryResolve<TType>(out TType) Tries to resolve a service Declaration public bool TryResolve<TType>(out TType dependency) Parameters Type Name Description TType dependency The resolved service. Returns Type Description System.Boolean Whether the service was able to be resolved or not Type Parameters Name Description TType The type of service to resolve"
  },
  "api/OpenAPI.Plugins.DependencyLifetime.html": {
    "href": "api/OpenAPI.Plugins.DependencyLifetime.html",
    "title": "Enum DependencyLifetime",
    "keywords": "Enum DependencyLifetime Used to determine a services lifetime Namespace : OpenAPI.Plugins Assembly : OpenAPI.dll Syntax public enum DependencyLifetime : int Fields Name Description Singleton Keep 1 instance throughout the service lifetime Transient Create a new instance everytime it is requested"
  },
  "api/OpenAPI.Plugins.html": {
    "href": "api/OpenAPI.Plugins.html",
    "title": "Namespace OpenAPI.Plugins",
    "keywords": "Namespace OpenAPI.Plugins Classes DependencyContainer A dependency injection container LoadedAssembly LoadedPlugin OpenPlugin Provides the base class for any plugin. All plugins running on OpenAPI must have atleast one class inhereting this. OpenPluginInfo An attribute containing information about a plugin. It can be applied on any classes implementing the OpenPlugin OpenPlugin class. OpenPluginManager PluginException Enums DependencyLifetime Used to determine a services lifetime"
  },
  "api/OpenAPI.Plugins.LoadedAssembly.html": {
    "href": "api/OpenAPI.Plugins.LoadedAssembly.html",
    "title": "Class LoadedAssembly",
    "keywords": "Class LoadedAssembly Inheritance System.Object LoadedAssembly Namespace : OpenAPI.Plugins Assembly : OpenAPI.dll Syntax public class LoadedAssembly : object Constructors | Improve this Doc View Source LoadedAssembly(Assembly, IEnumerable<Type>, IEnumerable<Assembly>, String) Declaration public LoadedAssembly(Assembly assembly, IEnumerable<Type> pluginInstances, IEnumerable<Assembly> referencedAssemblies, string path) Parameters Type Name Description Assembly assembly IEnumerable < Type > pluginInstances IEnumerable < Assembly > referencedAssemblies System.String path Properties | Improve this Doc View Source Assembly Declaration public Assembly Assembly { get; } Property Value Type Description Assembly | Improve this Doc View Source AssemblyReferences Declaration public List<Assembly> AssemblyReferences { get; } Property Value Type Description List < Assembly > | Improve this Doc View Source Path Declaration public string Path { get; } Property Value Type Description System.String | Improve this Doc View Source PluginTypes Declaration public List<Type> PluginTypes { get; } Property Value Type Description List < Type >"
  },
  "api/OpenAPI.Plugins.LoadedPlugin.html": {
    "href": "api/OpenAPI.Plugins.LoadedPlugin.html",
    "title": "Class LoadedPlugin",
    "keywords": "Class LoadedPlugin Inheritance System.Object LoadedPlugin Namespace : OpenAPI.Plugins Assembly : OpenAPI.dll Syntax public class LoadedPlugin : object Fields | Improve this Doc View Source Dependencies Declaration public string[] Dependencies Field Value Type Description System.String [] Properties | Improve this Doc View Source Enabled Declaration public bool Enabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Info Declaration public OpenPluginInfo Info { get; } Property Value Type Description OpenPluginInfo | Improve this Doc View Source Instance Declaration public OpenPlugin Instance { get; } Property Value Type Description OpenPlugin"
  },
  "api/OpenAPI.Plugins.OpenPlugin.html": {
    "href": "api/OpenAPI.Plugins.OpenPlugin.html",
    "title": "Class OpenPlugin",
    "keywords": "Class OpenPlugin Provides the base class for any plugin. All plugins running on OpenAPI must have atleast one class inhereting this. Inheritance System.Object OpenPlugin Namespace : OpenAPI.Plugins Assembly : OpenAPI.dll Syntax public abstract class OpenPlugin : object Constructors | Improve this Doc View Source OpenPlugin() Declaration protected OpenPlugin() Properties | Improve this Doc View Source Info Declaration public OpenPluginInfo Info { get; } Property Value Type Description OpenPluginInfo Methods | Improve this Doc View Source Disabled(OpenApi) The method that gets invoked as soon as a plugin gets Disabled. Any content initialized in Enabled(OpenApi) should be de-initialized in here. Declaration public abstract void Disabled(OpenApi api) Parameters Type Name Description OpenApi api An instance to OpenApi | Improve this Doc View Source Enabled(OpenApi) The method that gets invoked as soon as a plugin gets Enabled. Any initialization should be done in here. Declaration public abstract void Enabled(OpenApi api) Parameters Type Name Description OpenApi api An instance to OpenApi"
  },
  "api/OpenAPI.Plugins.OpenPluginInfo.html": {
    "href": "api/OpenAPI.Plugins.OpenPluginInfo.html",
    "title": "Class OpenPluginInfo",
    "keywords": "Class OpenPluginInfo An attribute containing information about a plugin. It can be applied on any classes implementing the OpenPlugin OpenPlugin class. Inheritance System.Object OpenPluginInfo Namespace : OpenAPI.Plugins Assembly : OpenAPI.dll Syntax public sealed class OpenPluginInfo : Attribute Properties | Improve this Doc View Source Author Uniqely identifies who developed this plugin TruDan TruDan <trudan@example.com> Declaration public string Author { get; set; } Property Value Type Description System.String | Improve this Doc View Source Authors Allows you to list multiple authors, if it is a collaborative project. Author Declaration public string[] Authors { get; set; } Property Value Type Description System.String [] | Improve this Doc View Source Description A human friendly description of the functionality this plugin provides This plugin is so 1337. You can set yourself on fire. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name The name of the plugin MyPlugin Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Version The version of the plugin 1.4.1 Declaration public string Version { get; set; } Property Value Type Description System.String | Improve this Doc View Source Website The plugin's or author's website. example.com/MyAwesomePlugin Declaration public string Website { get; set; } Property Value Type Description System.String"
  },
  "api/OpenAPI.Plugins.OpenPluginManager.html": {
    "href": "api/OpenAPI.Plugins.OpenPluginManager.html",
    "title": "Class OpenPluginManager",
    "keywords": "Class OpenPluginManager Inheritance System.Object OpenPluginManager Namespace : OpenAPI.Plugins Assembly : OpenAPI.dll Syntax public sealed class OpenPluginManager : object Properties | Improve this Doc View Source Services The dependency injection service container used when loading plugins. Declaration public DependencyContainer Services { get; } Property Value Type Description DependencyContainer Methods | Improve this Doc View Source DiscoverPlugins(String[]) Declaration public void DiscoverPlugins(params string[] paths) Parameters Type Name Description System.String [] paths | Improve this Doc View Source GetLoadedPlugins() Returns a list of all loaded plugins. Declaration public LoadedPlugin[] GetLoadedPlugins() Returns Type Description LoadedPlugin [] | Improve this Doc View Source UnloadAll() Unloads all loaded plugins Declaration public void UnloadAll() | Improve this Doc View Source UnloadPluginAssembly(Assembly) Unloads all plugins registered by specified assembly Declaration public void UnloadPluginAssembly(Assembly pluginAssembly) Parameters Type Name Description Assembly pluginAssembly"
  },
  "api/OpenAPI.Plugins.PluginException.html": {
    "href": "api/OpenAPI.Plugins.PluginException.html",
    "title": "Class PluginException",
    "keywords": "Class PluginException Inheritance System.Object PluginException Namespace : OpenAPI.Plugins Assembly : OpenAPI.dll Syntax public class PluginException : Exception Constructors | Improve this Doc View Source PluginException() Declaration public PluginException() | Improve this Doc View Source PluginException(Exception) Declaration public PluginException(Exception ex) Parameters Type Name Description Exception ex"
  },
  "api/OpenAPI.Utils.CoordinateExtensions.html": {
    "href": "api/OpenAPI.Utils.CoordinateExtensions.html",
    "title": "Class CoordinateExtensions",
    "keywords": "Class CoordinateExtensions Inheritance System.Object CoordinateExtensions Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public static class CoordinateExtensions : object Methods | Improve this Doc View Source ToBlockCoordinates(PlayerLocation) Declaration public static BlockCoordinates ToBlockCoordinates(this PlayerLocation location) Parameters Type Name Description PlayerLocation location Returns Type Description BlockCoordinates"
  },
  "api/OpenAPI.Utils.FastMath.html": {
    "href": "api/OpenAPI.Utils.FastMath.html",
    "title": "Class FastMath",
    "keywords": "Class FastMath Inheritance System.Object FastMath Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public static class FastMath : object Fields | Improve this Doc View Source DOUBLE_PI Declaration public const float DOUBLE_PI = null Field Value Type Description System.Single | Improve this Doc View Source HALF_PI Declaration public const float HALF_PI = null Field Value Type Description System.Single | Improve this Doc View Source PI Declaration public const float PI = null Field Value Type Description System.Single | Improve this Doc View Source TWO_PI_INV Declaration public const float TWO_PI_INV = null Field Value Type Description System.Single Methods | Improve this Doc View Source Abs(Decimal) Declaration public static decimal Abs(decimal d) Parameters Type Name Description System.Decimal d Returns Type Description System.Decimal | Improve this Doc View Source Abs(Double) Declaration public static double Abs(double d) Parameters Type Name Description System.Double d Returns Type Description System.Double | Improve this Doc View Source Abs(Int16) Declaration public static short Abs(short d) Parameters Type Name Description System.Int16 d Returns Type Description System.Int16 | Improve this Doc View Source Abs(Int32) Declaration public static int Abs(int d) Parameters Type Name Description System.Int32 d Returns Type Description System.Int32 | Improve this Doc View Source Abs(Int64) Declaration public static long Abs(long d) Parameters Type Name Description System.Int64 d Returns Type Description System.Int64 | Improve this Doc View Source Abs(SByte) Declaration public static sbyte Abs(sbyte d) Parameters Type Name Description System.SByte d Returns Type Description System.SByte | Improve this Doc View Source Abs(Single) Declaration public static float Abs(float d) Parameters Type Name Description System.Single d Returns Type Description System.Single | Improve this Doc View Source Cbrt(Double) Declaration public static double Cbrt(double x) Parameters Type Name Description System.Double x Returns Type Description System.Double | Improve this Doc View Source Cbrt(Single) Declaration public static float Cbrt(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single | Improve this Doc View Source Ceiling(Decimal) Declaration public static int Ceiling(decimal x) Parameters Type Name Description System.Decimal x Returns Type Description System.Int32 | Improve this Doc View Source Ceiling(Double) Declaration public static int Ceiling(double x) Parameters Type Name Description System.Double x Returns Type Description System.Int32 | Improve this Doc View Source Ceiling(Single) Declaration public static int Ceiling(float x) Parameters Type Name Description System.Single x Returns Type Description System.Int32 | Improve this Doc View Source Copysign(Double, Double) Declaration public static double Copysign(double x, double signval) Parameters Type Name Description System.Double x System.Double signval Returns Type Description System.Double | Improve this Doc View Source Copysign(Single, Single) Declaration public static float Copysign(float x, float signval) Parameters Type Name Description System.Single x System.Single signval Returns Type Description System.Single | Improve this Doc View Source Cos(Double) Declaration public static double Cos(double x) Parameters Type Name Description System.Double x Returns Type Description System.Double | Improve this Doc View Source Cos(Single) Declaration public static float Cos(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single | Improve this Doc View Source Dim(Double, Double) Declaration public static double Dim(double a, double b) Parameters Type Name Description System.Double a System.Double b Returns Type Description System.Double | Improve this Doc View Source Dim(Single, Single) Declaration public static double Dim(float a, float b) Parameters Type Name Description System.Single a System.Single b Returns Type Description System.Double | Improve this Doc View Source Exp2(Double) Declaration public static double Exp2(double exp) Parameters Type Name Description System.Double exp Returns Type Description System.Double | Improve this Doc View Source Exp2(Single) Declaration public static float Exp2(float exp) Parameters Type Name Description System.Single exp Returns Type Description System.Single | Improve this Doc View Source Floor(Decimal) Declaration public static int Floor(decimal x) Parameters Type Name Description System.Decimal x Returns Type Description System.Int32 | Improve this Doc View Source Floor(Double) Declaration public static int Floor(double x) Parameters Type Name Description System.Double x Returns Type Description System.Int32 | Improve this Doc View Source Floor(Single) Declaration public static int Floor(float x) Parameters Type Name Description System.Single x Returns Type Description System.Int32 | Improve this Doc View Source Hypot(Double, Double) Declaration public static double Hypot(double x, double y) Parameters Type Name Description System.Double x System.Double y Returns Type Description System.Double | Improve this Doc View Source Hypot(Single, Single) Declaration public static double Hypot(float x, float y) Parameters Type Name Description System.Single x System.Single y Returns Type Description System.Double | Improve this Doc View Source Ldexp(Double, Int32) Declaration public static double Ldexp(double num, int exp) Parameters Type Name Description System.Double num System.Int32 exp Returns Type Description System.Double | Improve this Doc View Source Ldexp(Single, Int32) Declaration public static float Ldexp(float num, int exp) Parameters Type Name Description System.Single num System.Int32 exp Returns Type Description System.Single | Improve this Doc View Source Ma(Double, Double, Double) Declaration public static double Ma(double a, double b, double c) Parameters Type Name Description System.Double a System.Double b System.Double c Returns Type Description System.Double | Improve this Doc View Source Ma(Single, Single, Single) Declaration public static float Ma(float a, float b, float c) Parameters Type Name Description System.Single a System.Single b System.Single c Returns Type Description System.Single | Improve this Doc View Source Max(Double, Double) Declaration public static double Max(double a, double b) Parameters Type Name Description System.Double a System.Double b Returns Type Description System.Double | Improve this Doc View Source Max(Single, Single) Declaration public static double Max(float a, float b) Parameters Type Name Description System.Single a System.Single b Returns Type Description System.Double | Improve this Doc View Source Min(Double, Double) Declaration public static double Min(double a, double b) Parameters Type Name Description System.Double a System.Double b Returns Type Description System.Double | Improve this Doc View Source Min(Single, Single) Declaration public static float Min(float a, float b) Parameters Type Name Description System.Single a System.Single b Returns Type Description System.Single | Improve this Doc View Source Mod(Double, Double) Declaration public static double Mod(double a, double b) Parameters Type Name Description System.Double a System.Double b Returns Type Description System.Double | Improve this Doc View Source Mod(Single, Single) Declaration public static float Mod(float a, float b) Parameters Type Name Description System.Single a System.Single b Returns Type Description System.Single | Improve this Doc View Source Pow(Double, Double) Declaration public static double Pow(double a, double b) Parameters Type Name Description System.Double a System.Double b Returns Type Description System.Double | Improve this Doc View Source Pow(Int32, Int32) Declaration public static int Pow(int a, int b) Parameters Type Name Description System.Int32 a System.Int32 b Returns Type Description System.Int32 | Improve this Doc View Source Remainder(Double, Double) Declaration public static double Remainder(double a, double b) Parameters Type Name Description System.Double a System.Double b Returns Type Description System.Double | Improve this Doc View Source Remainder(Single, Single) Declaration public static float Remainder(float a, float b) Parameters Type Name Description System.Single a System.Single b Returns Type Description System.Single | Improve this Doc View Source Round(Double) Declaration public static int Round(double arg) Parameters Type Name Description System.Double arg Returns Type Description System.Int32 | Improve this Doc View Source Round(Single) Declaration public static int Round(float arg) Parameters Type Name Description System.Single arg Returns Type Description System.Int32 | Improve this Doc View Source Sin(Double) Declaration public static double Sin(double x) Parameters Type Name Description System.Double x Returns Type Description System.Double | Improve this Doc View Source Sin(Single) Declaration public static float Sin(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single | Improve this Doc View Source Sqrt(Double) Declaration public static double Sqrt(double x) Parameters Type Name Description System.Double x Returns Type Description System.Double | Improve this Doc View Source Sqrt(Single) Declaration public static float Sqrt(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single | Improve this Doc View Source Tan(Double) Declaration public static double Tan(double d) Parameters Type Name Description System.Double d Returns Type Description System.Double | Improve this Doc View Source ToRadians(Single) Declaration public static float ToRadians(float angle) Parameters Type Name Description System.Single angle Returns Type Description System.Single | Improve this Doc View Source Trunc(Double) Declaration public static int Trunc(double arg) Parameters Type Name Description System.Double arg Returns Type Description System.Int32 | Improve this Doc View Source Trunc(Single) Declaration public static int Trunc(float arg) Parameters Type Name Description System.Single arg Returns Type Description System.Int32"
  },
  "api/OpenAPI.Utils.FastRandom.html": {
    "href": "api/OpenAPI.Utils.FastRandom.html",
    "title": "Class FastRandom",
    "keywords": "Class FastRandom A fast random number generator for .NET Colin Green, January 2005 September 4th 2005 Added NextBytesUnsafe() - commented out by default. Fixed bug in Reinitialise() - y,z and w variables were not being reset. Key points: Based on a simple and fast xor-shift pseudo random number generator (RNG) specified in: Marsaglia, George. (2003). Xorshift RNGs. http://www.jstatsoft.org/v08/i14/xorshift.pdf This particular implementation of xorshift has a period of 2^128-1. See the above paper to see how this can be easily extened if you need a longer period. At the time of writing I could find no information on the period of System.Random for comparison. Faster than System.Random. Up to 8x faster, depending on which methods are called. Direct replacement for System.Random. This class implements all of the methods that System.Random does plus some additional methods. The like named methods are functionally equivalent. Allows fast re-initialisation with a seed, unlike System.Random which accepts a seed at construction time which then executes a relatively expensive initialisation routine. This provides a vast speed improvement if you need to reset the pseudo-random number sequence many times, e.g. if you want to re-generate the same sequence many times. An alternative might be to cache random numbers in an array, but that approach is limited by memory capacity and the fact that you may also want a large number of different sequences cached. Each sequence can each be represented by a single seed value (int) when using FastRandom. Notes. A further performance improvement can be obtained by declaring local variables as static, thus avoiding re-allocation of variables on each call. However care should be taken if multiple instances of FastRandom are in use or if being used in a multi-threaded environment. Inheritance System.Object FastRandom Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public class FastRandom : object Constructors | Improve this Doc View Source FastRandom() Initialises a new instance using time dependent seed. Declaration public FastRandom() | Improve this Doc View Source FastRandom(Int32) Initialises a new instance using an int value as seed. This constructor signature is provided to maintain compatibility with System.Random Declaration public FastRandom(int seed) Parameters Type Name Description System.Int32 seed Methods | Improve this Doc View Source Next() Generates a random int over the range 0 to int.MaxValue-1. MaxValue is not generated in order to remain functionally equivalent to System.Random.Next(). This does slightly eat into some of the performance gain over System.Random, but not much. For better performance see: Call NextInt() for an int over the range 0 to int.MaxValue. Call NextUInt() and cast the result to an int to generate an int over the full Int32 value range including negative values. Declaration public int Next() Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32) Generates a random int over the range 0 to upperBound-1, and not including upperBound. Declaration public int Next(int upperBound) Parameters Type Name Description System.Int32 upperBound Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32, Int32) Generates a random int over the range lowerBound to upperBound-1, and not including upperBound. upperBound must be >= lowerBound. lowerBound may be negative. Declaration public int Next(int lowerBound, int upperBound) Parameters Type Name Description System.Int32 lowerBound System.Int32 upperBound Returns Type Description System.Int32 | Improve this Doc View Source NextBool() Generates a single random bit. This method's performance is improved by generating 32 bits in one operation and storing them ready for future calls. Declaration public bool NextBool() Returns Type Description System.Boolean | Improve this Doc View Source NextBytes(Byte[]) Fills the provided byte array with random bytes. This method is functionally equivalent to System.Random.NextBytes(). Declaration public void NextBytes(byte[] buffer) Parameters Type Name Description System.Byte [] buffer | Improve this Doc View Source NextDouble() Generates a random double. Values returned are from 0.0 up to but not including 1.0. Declaration public double NextDouble() Returns Type Description System.Double | Improve this Doc View Source NextInt() Generates a random int over the range 0 to int.MaxValue, inclusive. This method differs from Next() only in that the range is 0 to int.MaxValue and not 0 to int.MaxValue-1. The slight difference in range means this method is slightly faster than Next() but is not functionally equivalent to System.Random.Next(). Declaration public int NextInt() Returns Type Description System.Int32 | Improve this Doc View Source NextUInt() Generates a uint. Values returned are over the full range of a uint, uint.MinValue to uint.MaxValue, inclusive. This is the fastest method for generating a single random number because the underlying random number generator algorithm generates 32 random bits that can be cast directly to a uint. Declaration public uint NextUInt() Returns Type Description System.UInt32 | Improve this Doc View Source Reinitialise(Int32) Reinitialises using an int value as a seed. Declaration public void Reinitialise(int seed) Parameters Type Name Description System.Int32 seed"
  },
  "api/OpenAPI.Utils.html": {
    "href": "api/OpenAPI.Utils.html",
    "title": "Namespace OpenAPI.Utils",
    "keywords": "Namespace OpenAPI.Utils Classes CoordinateExtensions FastMath FastRandom A fast random number generator for .NET Colin Green, January 2005 September 4th 2005 Added NextBytesUnsafe() - commented out by default. Fixed bug in Reinitialise() - y,z and w variables were not being reset. Key points: Based on a simple and fast xor-shift pseudo random number generator (RNG) specified in: Marsaglia, George. (2003). Xorshift RNGs. http://www.jstatsoft.org/v08/i14/xorshift.pdf This particular implementation of xorshift has a period of 2^128-1. See the above paper to see how this can be easily extened if you need a longer period. At the time of writing I could find no information on the period of System.Random for comparison. Faster than System.Random. Up to 8x faster, depending on which methods are called. Direct replacement for System.Random. This class implements all of the methods that System.Random does plus some additional methods. The like named methods are functionally equivalent. Allows fast re-initialisation with a seed, unlike System.Random which accepts a seed at construction time which then executes a relatively expensive initialisation routine. This provides a vast speed improvement if you need to reset the pseudo-random number sequence many times, e.g. if you want to re-generate the same sequence many times. An alternative might be to cache random numbers in an array, but that approach is limited by memory capacity and the fact that you may also want a large number of different sequences cached. Each sequence can each be represented by a single seed value (int) when using FastRandom. Notes. A further performance improvement can be obtained by declaring local variables as static, thus avoiding re-allocation of variables on each call. However care should be taken if multiple instances of FastRandom are in use or if being used in a multi-threaded environment. ListExtensions ReflectionHelper TaskExtensions ThreadSafeList<T> TickScheduler Enums PlayerInput PlayerInputState"
  },
  "api/OpenAPI.Utils.ListExtensions.html": {
    "href": "api/OpenAPI.Utils.ListExtensions.html",
    "title": "Class ListExtensions",
    "keywords": "Class ListExtensions Inheritance System.Object ListExtensions Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public static class ListExtensions : object Methods | Improve this Doc View Source AddRange<T>(IList<T>, IEnumerable<T>) Declaration public static void AddRange<T>(this IList<T> list, IEnumerable<T> collection) Parameters Type Name Description IList <T> list IEnumerable <T> collection Type Parameters Name Description T | Improve this Doc View Source ForEach<T>(IList<T>, Action<T>) Declaration public static void ForEach<T>(this IList<T> list, Action<T> action) Parameters Type Name Description IList <T> list Action <T> action Type Parameters Name Description T | Improve this Doc View Source ShiftLeft<T>(List<T>, Int32, Boolean) Declaration public static List<T> ShiftLeft<T>(this List<T> list, int shiftBy, bool nonLossy = true) Parameters Type Name Description List <T> list System.Int32 shiftBy System.Boolean nonLossy Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source ShiftRight<T>(List<T>, Int32) Declaration public static List<T> ShiftRight<T>(this List<T> list, int shiftBy) Parameters Type Name Description List <T> list System.Int32 shiftBy Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source Sort<T>(IList<T>) Declaration public static void Sort<T>(this IList<T> list) Parameters Type Name Description IList <T> list Type Parameters Name Description T | Improve this Doc View Source Sort<T>(IList<T>, Comparison<T>) Declaration public static void Sort<T>(this IList<T> list, Comparison<T> comparison) Parameters Type Name Description IList <T> list Comparison <T> comparison Type Parameters Name Description T | Improve this Doc View Source Sort<T>(IList<T>, IComparer<T>) Declaration public static void Sort<T>(this IList<T> list, IComparer<T> comparer) Parameters Type Name Description IList <T> list IComparer <T> comparer Type Parameters Name Description T | Improve this Doc View Source Sort<T>(IList<T>, Int32, Int32, IComparer<T>) Declaration public static void Sort<T>(this IList<T> list, int index, int count, IComparer<T> comparer) Parameters Type Name Description IList <T> list System.Int32 index System.Int32 count IComparer <T> comparer Type Parameters Name Description T"
  },
  "api/OpenAPI.Utils.PlayerInput.html": {
    "href": "api/OpenAPI.Utils.PlayerInput.html",
    "title": "Enum PlayerInput",
    "keywords": "Enum PlayerInput Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public enum PlayerInput : int Fields Name Description A D S Space W"
  },
  "api/OpenAPI.Utils.PlayerInputState.html": {
    "href": "api/OpenAPI.Utils.PlayerInputState.html",
    "title": "Enum PlayerInputState",
    "keywords": "Enum PlayerInputState Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public enum PlayerInputState : int Fields Name Description Down Up"
  },
  "api/OpenAPI.Utils.ReflectionHelper.html": {
    "href": "api/OpenAPI.Utils.ReflectionHelper.html",
    "title": "Class ReflectionHelper",
    "keywords": "Class ReflectionHelper Inheritance System.Object ReflectionHelper Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public static class ReflectionHelper : object Methods | Improve this Doc View Source GetPrivateFieldValue<T>(Type, Object, String) Returns a private Property Value from a given Object. Uses Reflection. Throws a ArgumentOutOfRangeException if the Property is not found. Declaration public static T GetPrivateFieldValue<T>(Type t, object obj, string propName) Parameters Type Name Description Type t System.Object obj Object from where the Property Value is returned System.String propName Propertyname as string. Returns Type Description T PropertyValue Type Parameters Name Description T Type of the Property | Improve this Doc View Source GetPrivatePropertyValue<T>(Type, Object, String) Returns a private Property Value from a given Object. Uses Reflection. Throws a ArgumentOutOfRangeException if the Property is not found. Declaration public static T GetPrivatePropertyValue<T>(Type t, object obj, string propName) Parameters Type Name Description Type t System.Object obj Object from where the Property Value is returned System.String propName Propertyname as string. Returns Type Description T PropertyValue Type Parameters Name Description T Type of the Property | Improve this Doc View Source GetPrivateStaticPropertyValue<T>(Type, String) Declaration public static T GetPrivateStaticPropertyValue<T>(Type t, string propName) Parameters Type Name Description Type t System.String propName Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source InvokePrivateMethod(Type, Object, String, Object[]) Declaration public static object InvokePrivateMethod(Type type, object obj, string method, object[] parameters) Parameters Type Name Description Type type System.Object obj System.String method System.Object [] parameters Returns Type Description System.Object | Improve this Doc View Source SetPrivateFieldValue<T>(Type, Object, String, T) Set a private Property Value on a given Object. Uses Reflection. Declaration public static void SetPrivateFieldValue<T>(Type t, object obj, string propName, T val) Parameters Type Name Description Type t System.Object obj Object from where the Property Value is returned System.String propName Propertyname as string. T val the value to set Type Parameters Name Description T Type of the Property | Improve this Doc View Source SetPrivatePropertyValue<T>(Type, Object, String, T) Sets a private Property Value from a given Object. Uses Reflection. Throws a ArgumentOutOfRangeException if the Property is not found. Declaration public static void SetPrivatePropertyValue<T>(Type t, object obj, string propName, T val) Parameters Type Name Description Type t System.Object obj Object from where the Property Value is set System.String propName Propertyname as string. T val Value to set. Type Parameters Name Description T Type of the Property"
  },
  "api/OpenAPI.Utils.ResourcePacks.Header.html": {
    "href": "api/OpenAPI.Utils.ResourcePacks.Header.html",
    "title": "Class Header",
    "keywords": "Class Header Inheritance System.Object Header Namespace : OpenAPI.Utils.ResourcePacks Assembly : OpenAPI.dll Syntax public class Header : object Properties | Improve this Doc View Source Description Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source MinEngineVersion Declaration public long[] MinEngineVersion { get; set; } Property Value Type Description System.Int64 [] | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Uuid Declaration public string Uuid { get; set; } Property Value Type Description System.String | Improve this Doc View Source Version Declaration public long[] Version { get; set; } Property Value Type Description System.Int64 []"
  },
  "api/OpenAPI.Utils.ResourcePacks.html": {
    "href": "api/OpenAPI.Utils.ResourcePacks.html",
    "title": "Namespace OpenAPI.Utils.ResourcePacks",
    "keywords": "Namespace OpenAPI.Utils.ResourcePacks Classes Header Module ResourcePackManifest ResourcePackProvider"
  },
  "api/OpenAPI.Utils.ResourcePacks.Module.html": {
    "href": "api/OpenAPI.Utils.ResourcePacks.Module.html",
    "title": "Class Module",
    "keywords": "Class Module Inheritance System.Object Module Namespace : OpenAPI.Utils.ResourcePacks Assembly : OpenAPI.dll Syntax public class Module : object Properties | Improve this Doc View Source Type Declaration public string Type { get; set; } Property Value Type Description System.String | Improve this Doc View Source Uuid Declaration public string Uuid { get; set; } Property Value Type Description System.String | Improve this Doc View Source Version Declaration public long[] Version { get; set; } Property Value Type Description System.Int64 []"
  },
  "api/OpenAPI.Utils.ResourcePacks.ResourcePackManifest.html": {
    "href": "api/OpenAPI.Utils.ResourcePacks.ResourcePackManifest.html",
    "title": "Class ResourcePackManifest",
    "keywords": "Class ResourcePackManifest Inheritance System.Object ResourcePackManifest Namespace : OpenAPI.Utils.ResourcePacks Assembly : OpenAPI.dll Syntax public class ResourcePackManifest : object Properties | Improve this Doc View Source FormatVersion Declaration public long FormatVersion { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Header Declaration public Header Header { get; set; } Property Value Type Description Header | Improve this Doc View Source Modules Declaration public Module[] Modules { get; set; } Property Value Type Description Module []"
  },
  "api/OpenAPI.Utils.ResourcePacks.ResourcePackProvider.html": {
    "href": "api/OpenAPI.Utils.ResourcePacks.ResourcePackProvider.html",
    "title": "Class ResourcePackProvider",
    "keywords": "Class ResourcePackProvider Inheritance System.Object ResourcePackProvider Namespace : OpenAPI.Utils.ResourcePacks Assembly : OpenAPI.dll Syntax public class ResourcePackProvider : object Constructors | Improve this Doc View Source ResourcePackProvider(OpenApi) Declaration public ResourcePackProvider(OpenApi api) Parameters Type Name Description OpenApi api Properties | Improve this Doc View Source HasData Declaration public bool HasData { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MustAccept Declaration public bool MustAccept { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetChunkCount(String, UInt32, out ResourcePackManifest, out UInt64, out Byte[]) Declaration public uint GetChunkCount(string packageId, uint maxChunKSize, out ResourcePackManifest manifest, out ulong size, out byte[] hash) Parameters Type Name Description System.String packageId System.UInt32 maxChunKSize ResourcePackManifest manifest System.UInt64 size System.Byte [] hash Returns Type Description System.UInt32 | Improve this Doc View Source GetResourcePackChunk(String, UInt32, UInt32) Declaration public byte[] GetResourcePackChunk(string packageId, uint chunkIndex, uint maxChunkSize) Parameters Type Name Description System.String packageId System.UInt32 chunkIndex System.UInt32 maxChunkSize Returns Type Description System.Byte [] | Improve this Doc View Source GetResourcePackInfos() Declaration public IEnumerable<ResourcePackInfo> GetResourcePackInfos() Returns Type Description IEnumerable < ResourcePackInfo > | Improve this Doc View Source UseResourcePack(String, Boolean) Declaration public void UseResourcePack(string file, bool required) Parameters Type Name Description System.String file System.Boolean required"
  },
  "api/OpenAPI.Utils.TaskExtensions.html": {
    "href": "api/OpenAPI.Utils.TaskExtensions.html",
    "title": "Class TaskExtensions",
    "keywords": "Class TaskExtensions Inheritance System.Object TaskExtensions Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public static class TaskExtensions : object Methods | Improve this Doc View Source Then<TResult>(Task<TResult>, Action<TResult>) Blocking version of ContinueWith. Declaration public static TResult Then<TResult>(this Task<TResult> task, Action<TResult> continuationAction) Parameters Type Name Description Task <TResult> task Action <TResult> continuationAction Returns Type Description TResult Type Parameters Name Description TResult | Improve this Doc View Source Then<TResult>(Task<TResult>, Action<TResult>, CancellationToken) Blocking version of ContinueWith. Declaration public static TResult Then<TResult>(this Task<TResult> task, Action<TResult> continuationAction, CancellationToken cancellationToken) Parameters Type Name Description Task <TResult> task Action <TResult> continuationAction CancellationToken cancellationToken Returns Type Description TResult Type Parameters Name Description TResult | Improve this Doc View Source ThenAsync<TResult>(Task<TResult>, Action<TResult>) Declaration public static Task<TResult> ThenAsync<TResult>(this Task<TResult> task, Action<TResult> continuationAction) Parameters Type Name Description Task <TResult> task Action <TResult> continuationAction Returns Type Description Task <TResult> Type Parameters Name Description TResult"
  },
  "api/OpenAPI.Utils.ThreadSafeList-1.html": {
    "href": "api/OpenAPI.Utils.ThreadSafeList-1.html",
    "title": "Class ThreadSafeList<T>",
    "keywords": "Class ThreadSafeList<T> Inheritance System.Object ThreadSafeList<T> Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public sealed class ThreadSafeList<T> : IList<T> Type Parameters Name Description T Constructors | Improve this Doc View Source ThreadSafeList() Declaration public ThreadSafeList() | Improve this Doc View Source ThreadSafeList(IEnumerable<T>) Declaration public ThreadSafeList(IEnumerable<T> items) Parameters Type Name Description IEnumerable <T> items Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[Int32] Declaration public T this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description T Methods | Improve this Doc View Source Add(T) Declaration public void Add(T item) Parameters Type Name Description T item | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(T) Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description System.Boolean | Improve this Doc View Source CopyTo(T[], Int32) Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array System.Int32 arrayIndex | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source IndexOf(T) Declaration public int IndexOf(T item) Parameters Type Name Description T item Returns Type Description System.Int32 | Improve this Doc View Source Insert(Int32, T) Declaration public void Insert(int index, T item) Parameters Type Name Description System.Int32 index T item | Improve this Doc View Source Remove(T) Declaration public bool Remove(T item) Parameters Type Name Description T item Returns Type Description System.Boolean | Improve this Doc View Source RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source TryAdd(T) Declaration public bool TryAdd(T item) Parameters Type Name Description T item Returns Type Description System.Boolean"
  },
  "api/OpenAPI.Utils.TickScheduler.html": {
    "href": "api/OpenAPI.Utils.TickScheduler.html",
    "title": "Class TickScheduler",
    "keywords": "Class TickScheduler Inheritance System.Object TickScheduler Namespace : OpenAPI.Utils Assembly : OpenAPI.dll Syntax public class TickScheduler : object Constructors | Improve this Doc View Source TickScheduler() Declaration public TickScheduler() Methods | Improve this Doc View Source Close() Declaration public void Close() | Improve this Doc View Source ScheduleTick(UInt64, Action, CancellationToken, Boolean) Declaration public void ScheduleTick(ulong ticksFromNow, Action onTick, CancellationToken cancellationToken, bool repeat = false) Parameters Type Name Description System.UInt64 ticksFromNow Action onTick CancellationToken cancellationToken System.Boolean repeat"
  },
  "api/OpenAPI.World.html": {
    "href": "api/OpenAPI.World.html",
    "title": "Namespace OpenAPI.World",
    "keywords": "Namespace OpenAPI.World Classes OpenLevel OpenLevelManager The LevelManager keeps track of all available Levels (A.K.A Worlds) in the server. WrappedCachedWorldProvider WrappedWorldProvider"
  },
  "api/OpenAPI.World.OpenLevel.html": {
    "href": "api/OpenAPI.World.OpenLevel.html",
    "title": "Class OpenLevel",
    "keywords": "Class OpenLevel Inheritance System.Object OpenLevel Namespace : OpenAPI.World Assembly : OpenAPI.dll Syntax public class OpenLevel : Level Constructors | Improve this Doc View Source OpenLevel(OpenApi, OpenLevelManager, String, IWorldProvider, EntityManager, GameMode, Difficulty, Int32) Declaration public OpenLevel(OpenApi openApi, OpenLevelManager levelManager, string levelId, IWorldProvider worldProvider, EntityManager entityManager, GameMode gameMode = null, Difficulty difficulty = null, int viewDistance = 11) Parameters Type Name Description OpenApi openApi OpenLevelManager levelManager System.String levelId IWorldProvider worldProvider EntityManager entityManager GameMode gameMode Difficulty difficulty System.Int32 viewDistance Properties | Improve this Doc View Source EventDispatcher Declaration public EventDispatcher EventDispatcher { get; } Property Value Type Description EventDispatcher | Improve this Doc View Source OpenAPI Declaration public OpenApi OpenAPI { get; } Property Value Type Description OpenApi | Improve this Doc View Source TickScheduler Declaration public TickScheduler TickScheduler { get; } Property Value Type Description TickScheduler Methods | Improve this Doc View Source AddPlayer(MiNET.Player, Boolean) Declaration public override void AddPlayer(MiNET.Player newPlayer, bool spawn) Parameters Type Name Description MiNET.Player newPlayer System.Boolean spawn | Improve this Doc View Source BreakBlock(Block, BlockFace, OpenPlayer, Item) Declaration public bool BreakBlock(Block block, BlockFace face, OpenPlayer player = null, Item tool = null) Parameters Type Name Description Block block BlockFace face OpenPlayer player Item tool Returns Type Description System.Boolean | Improve this Doc View Source BroadcastMessage(String, MessageType, MiNET.Player, MiNET.Player[], Boolean, String[]) Declaration public override void BroadcastMessage(string text, MessageType type = null, MiNET.Player sender = null, MiNET.Player[] sendList = null, bool needsTranslation = false, string[] parameters = null) Parameters Type Name Description System.String text MessageType type MiNET.Player sender MiNET.Player [] sendList System.Boolean needsTranslation System.String [] parameters | Improve this Doc View Source Close() Declaration public override void Close() | Improve this Doc View Source DropItem(Vector3, Item) Declaration public override void DropItem(Vector3 coordinates, Item drop) Parameters Type Name Description Vector3 coordinates Item drop | Improve this Doc View Source OnBlockBreak(BlockBreakEventArgs) Declaration protected override bool OnBlockBreak(BlockBreakEventArgs e) Parameters Type Name Description BlockBreakEventArgs e Returns Type Description System.Boolean | Improve this Doc View Source OnBlockPlace(BlockPlaceEventArgs) Declaration public override bool OnBlockPlace(BlockPlaceEventArgs e) Parameters Type Name Description BlockPlaceEventArgs e Returns Type Description System.Boolean | Improve this Doc View Source RemovePlayer(MiNET.Player, Boolean) Declaration public override void RemovePlayer(MiNET.Player player, bool despawn = true) Parameters Type Name Description MiNET.Player player System.Boolean despawn"
  },
  "api/OpenAPI.World.OpenLevelManager.html": {
    "href": "api/OpenAPI.World.OpenLevelManager.html",
    "title": "Class OpenLevelManager",
    "keywords": "Class OpenLevelManager The LevelManager keeps track of all available Levels (A.K.A Worlds) in the server. Inheritance System.Object OpenLevelManager Namespace : OpenAPI.World Assembly : OpenAPI.dll Syntax public class OpenLevelManager : LevelManager Constructors | Improve this Doc View Source OpenLevelManager(OpenApi) Declaration public OpenLevelManager(OpenApi api) Parameters Type Name Description OpenApi api Properties | Improve this Doc View Source GetLevels Returns the levels currently registered with the LevelManager Declaration public OpenLevel[] GetLevels { get; } Property Value Type Description OpenLevel [] | Improve this Doc View Source HasDefaultLevel Declaration public bool HasDefaultLevel { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LevelCount Declaration public int LevelCount { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Close() Closes the Level's Declaration public void Close() | Improve this Doc View Source GetDefaultLevel() Declaration public OpenLevel GetDefaultLevel() Returns Type Description OpenLevel | Improve this Doc View Source GetDimension(Level, Dimension) Declaration public override Level GetDimension(Level level, Dimension dimension) Parameters Type Name Description Level level Dimension dimension Returns Type Description Level | Improve this Doc View Source GetLevel(MiNET.Player, String) Declaration public override Level GetLevel(MiNET.Player player, string levelId) Parameters Type Name Description MiNET.Player player System.String levelId Returns Type Description Level | Improve this Doc View Source GetLevel(String, String, ChunkColumn[]) Declaration public OpenLevel GetLevel(string basepath, string levelId, ChunkColumn[] chunks) Parameters Type Name Description System.String basepath System.String levelId ChunkColumn [] chunks Returns Type Description OpenLevel | Improve this Doc View Source LoadLevel(OpenLevel) Initializes the OpenLevel instance, this could include loading the world from a local folder or generating a new world. Declaration public void LoadLevel(OpenLevel openLevel) Parameters Type Name Description OpenLevel openLevel The OpenLevel instance to register and initialize | Improve this Doc View Source LoadLevel(String) Declaration public OpenLevel LoadLevel(string levelDirectory) Parameters Type Name Description System.String levelDirectory Returns Type Description OpenLevel | Improve this Doc View Source LoadLevel(String, String) Declaration public OpenLevel LoadLevel(string levelDirectory, string levelId) Parameters Type Name Description System.String levelDirectory System.String levelId Returns Type Description OpenLevel | Improve this Doc View Source SetDefaultLevel(OpenLevel) Sets the Default OpenLevel players join when connecting to the server. Declaration public void SetDefaultLevel(OpenLevel level) Parameters Type Name Description OpenLevel level | Improve this Doc View Source UnloadLevel(OpenLevel) Declaration public void UnloadLevel(OpenLevel openLevel) Parameters Type Name Description OpenLevel openLevel"
  },
  "api/OpenAPI.World.WrappedCachedWorldProvider.html": {
    "href": "api/OpenAPI.World.WrappedCachedWorldProvider.html",
    "title": "Class WrappedCachedWorldProvider",
    "keywords": "Class WrappedCachedWorldProvider Inheritance System.Object WrappedWorldProvider WrappedCachedWorldProvider Implements ICachingWorldProvider Inherited Members WrappedWorldProvider.Api WrappedWorldProvider.Level WrappedWorldProvider.Initialize() WrappedWorldProvider.GetSpawnPoint() WrappedWorldProvider.GetName() WrappedWorldProvider.GetTime() WrappedWorldProvider.GetDayTime() WrappedWorldProvider.SaveChunks() WrappedWorldProvider.HaveNether() WrappedWorldProvider.HaveTheEnd() WrappedWorldProvider.IsCaching Namespace : OpenAPI.World Assembly : OpenAPI.dll Syntax public class WrappedCachedWorldProvider : WrappedWorldProvider, ICachingWorldProvider Constructors | Improve this Doc View Source WrappedCachedWorldProvider(OpenApi, IWorldProvider) Declaration public WrappedCachedWorldProvider(OpenApi api, IWorldProvider worldProvider) Parameters Type Name Description OpenApi api IWorldProvider worldProvider Methods | Improve this Doc View Source ClearCachedChunks() Declaration public void ClearCachedChunks() | Improve this Doc View Source GenerateChunkColumn(ChunkCoordinates, Boolean) Declaration public override ChunkColumn GenerateChunkColumn(ChunkCoordinates chunkCoordinates, bool cacheOnly = false) Parameters Type Name Description ChunkCoordinates chunkCoordinates System.Boolean cacheOnly Returns Type Description ChunkColumn Overrides WrappedWorldProvider.GenerateChunkColumn(ChunkCoordinates, Boolean) | Improve this Doc View Source GetCachedChunks() Declaration public ChunkColumn[] GetCachedChunks() Returns Type Description ChunkColumn [] | Improve this Doc View Source UnloadChunks(MiNET.Player[], ChunkCoordinates, Double) Declaration public int UnloadChunks(MiNET.Player[] players, ChunkCoordinates spawn, double maxViewDistance) Parameters Type Name Description MiNET.Player [] players ChunkCoordinates spawn System.Double maxViewDistance Returns Type Description System.Int32 Implements ICachingWorldProvider"
  },
  "api/OpenAPI.World.WrappedWorldProvider.html": {
    "href": "api/OpenAPI.World.WrappedWorldProvider.html",
    "title": "Class WrappedWorldProvider",
    "keywords": "Class WrappedWorldProvider Inheritance System.Object WrappedWorldProvider WrappedCachedWorldProvider Namespace : OpenAPI.World Assembly : OpenAPI.dll Syntax public class WrappedWorldProvider : IWorldProvider Constructors | Improve this Doc View Source WrappedWorldProvider(OpenApi, IWorldProvider) Declaration public WrappedWorldProvider(OpenApi api, IWorldProvider worldProvider) Parameters Type Name Description OpenApi api IWorldProvider worldProvider Properties | Improve this Doc View Source Api Declaration protected OpenApi Api { get; } Property Value Type Description OpenApi | Improve this Doc View Source IsCaching Declaration public bool IsCaching { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Level Declaration public OpenLevel Level { get; set; } Property Value Type Description OpenLevel Methods | Improve this Doc View Source GenerateChunkColumn(ChunkCoordinates, Boolean) Declaration public virtual ChunkColumn GenerateChunkColumn(ChunkCoordinates chunkCoordinates, bool cacheOnly = false) Parameters Type Name Description ChunkCoordinates chunkCoordinates System.Boolean cacheOnly Returns Type Description ChunkColumn | Improve this Doc View Source GetDayTime() Declaration public long GetDayTime() Returns Type Description System.Int64 | Improve this Doc View Source GetName() Declaration public string GetName() Returns Type Description System.String | Improve this Doc View Source GetSpawnPoint() Declaration public Vector3 GetSpawnPoint() Returns Type Description Vector3 | Improve this Doc View Source GetTime() Declaration public long GetTime() Returns Type Description System.Int64 | Improve this Doc View Source HaveNether() Declaration public bool HaveNether() Returns Type Description System.Boolean | Improve this Doc View Source HaveTheEnd() Declaration public bool HaveTheEnd() Returns Type Description System.Boolean | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source SaveChunks() Declaration public int SaveChunks() Returns Type Description System.Int32"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Welcome to OpenApi",
    "keywords": "Welcome to OpenApi Welcome to the OpenApi community! Currently not a lot of articles have been written, our main focus is the api it self at the moment. However we try to write documentation / articles when we can!"
  },
  "articles/permissions.html": {
    "href": "articles/permissions.html",
    "title": "Permissions",
    "keywords": "Permissions Implementing simple permissions for commands etc is fairly easy in OpenApi. You register your own PermissionChecker with the CommandManager and you are pretty much ready to go. Example: The permission checker class: public class MyCoolPermissionChecker : CommandPermissionChecker<StringPermissionAttribute> { public override bool HasPermission(StringPermissionAttribute attr, OpenPlayer player) { return player.Permissions.HasPermission(attr.Permission); } } Your plugin class public override void Enabled(OpenApi api) { api.CommandManager.RegisterPermissionChecker(new MyCoolPermissionChecker()); }"
  },
  "index.html": {
    "href": "index.html",
    "title": "OpenApi Documentation",
    "keywords": "OpenApi Documentation Written documentation is work in progress, in the meantime there is generated code documentation. See the top menu."
  }
}